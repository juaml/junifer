[tox]
envlist = isort, flake8, test, coverage, codespell, py3{8,9,10}
isolated_build = true

[gh-actions]
python =
    3.8: py38
    3.9: coverage
    3.10: py310

[testenv]
skip_install = false
# Required for git-annex
passenv =
    HOME
deps =
    pytest
commands =
    pytest

[testenv:isort]
skip_install = true
deps =
    isort
commands =
    isort --check-only --diff {toxinidir}/junifer {toxinidir}/setup.py

[testenv:flake8]
skip_install = true
deps =
    flake8
    flake8-docstrings
    flake8-bugbear
commands =
    flake8 {toxinidir}/junifer {toxinidir}/setup.py

[testenv:test]
skip_install = false
passenv =
    HOME
deps =
    pytest
commands =
    pytest -vv

[testenv:coverage]
skip_install = false
deps =
    pytest
    pytest-cov
commands =
    pytest --cov={envsitepackagesdir}/junifer --cov-report=xml -vv --cov-report=term

[testenv:codespell]
skip_install = true
deps =
    codespell
commands =
    codespell --config tox.ini examples/ junifer/ scratch/ tools/

################
# Tool configs #
################

[isort]
skip =
    __init__.py
profile = black
line_length = 79
lines_after_imports = 2
known_first_party = junifer
known_third_party =
    click
    numpy
    datalad
    pandas
    nibabel
    nilearn
    sqlalchemy
    yaml
    pytest

[flake8]
exclude =
    __init__.py
max-line-length = 79
extend-ignore =
    B024  # abstract class with no abstract methods
    D202
    E201  # whitespace after ‘(’
    E202  # whitespace before ‘)’
    E203  # whitespace before ‘,’, ‘;’, or ‘:’
    E221  # multiple spaces before operator
    E222  # multiple spaces after operator
    E241  # multiple spaces after ‘,’
    I100
    I101
    I201
    N806
    W503  # line break before binary operator
    W504  # line break after binary operator

[pytest]
testpaths =
    junifer/api/tests
    junifer/configs/tests
    junifer/data/tests
    junifer/datagrabber/tests
    junifer/datareader/tests
    junifer/markers/tests
    junifer/preprocess/tests
    junifer/storage/tests
    junifer/testing
    junifer/utils/tests

[coverage:paths]
source =
    junifer
    */site-packages/junifer

[coverage:run]
branch = true
omit =
    */setup.py
    */_version.py
    */tests/*
parallel = false

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain if non-runnable code isn't run:
    if __name__ == .__main__.:
precision = 2

[codespell]
skip = docs/auto_*,*.html,.git/,*.pyc,docs/_build
count =
quiet-level = 3
ignore-words = ignore_words.txt
interactive = 0
builtin = clear,rare,informal,names,usage
