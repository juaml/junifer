name: Run Tests

on:
  push:
    paths:
      - 'junifer/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'junifer/**'
      - '.github/workflows/**'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Set up system
      run: |
        bash -c "$(curl -fsSL http://neuro.debian.net/_files/neurodebian-travis.sh)"
        sudo apt-get -qq update
        sudo apt-get -qq install git-annex-standalone
    - name: Configure git for datalad
      run: |
        git config --global user.email "runner@github.com"
        git config --global user.name "GitHub Runner"
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        submodules: true
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install tox tox-gh-actions
    - name: Install AFNI
      run: |
        echo "++ Distro information"
        lsb_release -a

        echo "++ Add universe repo"
        sudo add-apt-repository -y universe

        echo "++ Add PPAs for R programs"
        sudo add-apt-repository -y "ppa:marutter/rrutter4.0"
        sudo add-apt-repository -y "ppa:c2d4u.team/c2d4u4.0+"

        echo "++ Update package manager info"
        sudo apt-get -qq update

        echo "++ Get main dependencies"
        sudo apt-get -qq install -y tcsh libssl-dev gsl-bin libjpeg62 vim curl \
        build-essential libcurl4-openssl-dev libxml2-dev libgfortran-11-dev \
        libgomp1 r-base cmake rsync libxm4

        sudo ln -s /usr/lib/x86_64-linux-gnu/libgsl.so.27 /usr/lib/x86_64-linux-gnu/libgsl.so.19

        curl -O https://afni.nimh.nih.gov/pub/dist/bin/misc/@update.afni.binaries
        sudo tcsh @update.afni.binaries -package linux_ubuntu_16_64 -bindir /afni
        echo "/afni" >> $GITHUB_PATH
      if: matrix.python-version == 3.10
    - name: Check AFNI
      run: |
        echo "Using AFNI : $(afni --version)"
      if: matrix.python-version == 3.10
    - name: Test with tox
      run: |
        tox
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        flags: junifer
      if: success() && matrix.python-version == 3.10
