
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_ets_rss_marker.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_run_ets_rss_marker.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_ets_rss_marker.py:


Extracting root sum of squares from edge-wise timeseries.
=========================================================
This example uses a ``RSSETSMarker`` to compute root sum of squares
of the edge-wise timeseries using the Schaefer parcellation
(100 rois and 200 rois, 17 Yeo networks) for a 4D nifti BOLD file.

Authors: Leonard Sasse, Sami Hamdan, Nicolas Nieto, Synchon Mandal

License: BSD 3 clause

.. GENERATED FROM PYTHON SOURCE LINES 14-23

.. code-block:: default


    import tempfile

    import junifer.testing.registry  # noqa: F401
    from junifer.api import collect, run
    from junifer.storage import SQLiteFeatureStorage
    from junifer.utils import configure_logging









.. GENERATED FROM PYTHON SOURCE LINES 24-25

Set the logging level to info to see extra information:

.. GENERATED FROM PYTHON SOURCE LINES 25-27

.. code-block:: default

    configure_logging(level="INFO")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-03-04 10:49:57,140 - JUNIFER - INFO - ===== Lib Versions =====
    2024-03-04 10:49:57,141 - JUNIFER - INFO - numpy: 1.26.4
    2024-03-04 10:49:57,141 - JUNIFER - INFO - scipy: 1.11.4
    2024-03-04 10:49:57,141 - JUNIFER - INFO - pandas: 2.1.4
    2024-03-04 10:49:57,141 - JUNIFER - INFO - nilearn: 0.10.2
    2024-03-04 10:49:57,141 - JUNIFER - INFO - nibabel: 5.2.1
    2024-03-04 10:49:57,141 - JUNIFER - INFO - junifer: 0.0.4.dev639
    2024-03-04 10:49:57,141 - JUNIFER - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 28-29

Define the DataGrabber interface

.. GENERATED FROM PYTHON SOURCE LINES 29-33

.. code-block:: default

    datagrabber = {
        "kind": "SPMAuditoryTestingDataGrabber",
    }








.. GENERATED FROM PYTHON SOURCE LINES 34-35

Define the markers interface

.. GENERATED FROM PYTHON SOURCE LINES 35-48

.. code-block:: default

    markers = [
        {
            "name": "Schaefer100x17_RSSETS",
            "kind": "RSSETSMarker",
            "parcellation": "Schaefer100x17",
        },
        {
            "name": "Schaefer200x17_RSSETS",
            "kind": "RSSETSMarker",
            "parcellation": "Schaefer200x17",
        },
    ]








.. GENERATED FROM PYTHON SOURCE LINES 49-51

Create a temporary directory for junifer feature extraction:
At the end you can read the extracted data into a ``pandas.DataFrame``.

.. GENERATED FROM PYTHON SOURCE LINES 51-75

.. code-block:: default

    with tempfile.TemporaryDirectory() as tmpdir:
        # Define the storage interface
        storage = {
            "kind": "SQLiteFeatureStorage",
            "uri": f"{tmpdir}/test.sqlite",
        }
        # Run the defined junifer feature extraction pipeline
        run(
            workdir=tmpdir,
            datagrabber=datagrabber,
            markers=markers,
            storage=storage,
            elements=["sub001"],  # we calculate for one subject only
        )
        # Collect extracted features data
        collect(storage=storage)
        # Create storage object to read in extracted features
        db = SQLiteFeatureStorage(uri=storage["uri"])

        # List all the features
        print(db.list_features())
        # Read extracted features
        df_vbm = db.read_df(feature_name="BOLD_Schaefer100x17_RSSETS")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-03-04 10:49:57,142 - JUNIFER - INFO - Getting element sub001
    2024-03-04 10:49:59,638 - JUNIFER - INFO - Fitting pipeline
    2024-03-04 10:49:59,638 - JUNIFER - INFO - Reading BOLD from /tmp/tmppr5ecpwk/sub001_bold.nii.gz
    2024-03-04 10:49:59,638 - JUNIFER - INFO - BOLD is type NIFTI
    2024-03-04 10:49:59,639 - JUNIFER - INFO - Reading T1w from /tmp/tmppr5ecpwk/sub001_T1w.nii.gz
    2024-03-04 10:49:59,639 - JUNIFER - INFO - T1w is type NIFTI
    2024-03-04 10:49:59,639 - JUNIFER - INFO - Fitting marker Schaefer100x17_RSSETS
    2024-03-04 10:49:59,640 - JUNIFER - INFO - Computing BOLD
    2024-03-04 10:49:59,640 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2024-03-04 10:49:59,640 - JUNIFER - INFO - Parcellation parameters:
    2024-03-04 10:49:59,640 - JUNIFER - INFO -      resolution: 3.0
    2024-03-04 10:49:59,640 - JUNIFER - INFO -      n_rois: 100
    2024-03-04 10:49:59,640 - JUNIFER - INFO -      yeo_networks: 17
    2024-03-04 10:49:59,640 - JUNIFER - INFO - At least one of the parcellation files are missing. Fetching using nilearn.
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_17Networks_order.txt ...
     ...done. (0 seconds, 0 min)
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_17Networks_order_FSLMNI152_2mm.nii.gz ...
     ...done. (0 seconds, 0 min)
    2024-03-04 10:50:00,032 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_17Networks_order_FSLMNI152_2mm.nii.gz
    2024-03-04 10:50:00,062 - JUNIFER - INFO - Found existing xfm file for MNI152NLin6Asym to MNI152Lin at /home/runner/junifer/data/xfms/MNI152NLin6Asym_to_MNI152Lin/MNI152NLin6Asym_to_MNI152Lin_Composite.h5
    2024-03-04 10:50:00,757 - JUNIFER - INFO - Downloading template MNI152Lin in resolution 2
    2024-03-04 10:50:00,854 - JUNIFER - INFO - antsApplyTransforms command to be executed:
    antsApplyTransforms -d 3 -e 3 -n 'GenericLabel[NearestNeighbor]' -i /tmp/tmp6ldyip_m/parcellationsfykvbfem/Schaefer100x17.nii.gz -r /tmp/tmp6ldyip_m/parcellationsfykvbfem/MNI152Lin_T1w_3.0.nii.gz -t /home/runner/junifer/data/xfms/MNI152NLin6Asym_to_MNI152Lin/MNI152NLin6Asym_to_MNI152Lin_Composite.h5 -o /tmp/tmpzp3146so/parcellations10l_h3ku/Schaefer100x17_warped_from_MNI152NLin6Asym_to_MNI152Lin.nii.gz
    2024-03-04 10:50:02,254 - JUNIFER - INFO - antsApplyTransforms command succeeded with the following output:
    b''
    2024-03-04 10:50:04,952 - JUNIFER - INFO - Storing in <SQLiteFeatureStorage @ /tmp/tmppz1a1btg/test.sqlite (multiple output)>
    2024-03-04 10:50:04,973 - JUNIFER - INFO - Fitting marker Schaefer200x17_RSSETS
    2024-03-04 10:50:04,973 - JUNIFER - INFO - Computing BOLD
    2024-03-04 10:50:04,973 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2024-03-04 10:50:04,973 - JUNIFER - INFO - Parcellation parameters:
    2024-03-04 10:50:04,973 - JUNIFER - INFO -      resolution: 3.0
    2024-03-04 10:50:04,973 - JUNIFER - INFO -      n_rois: 200
    2024-03-04 10:50:04,973 - JUNIFER - INFO -      yeo_networks: 17
    2024-03-04 10:50:04,974 - JUNIFER - INFO - At least one of the parcellation files are missing. Fetching using nilearn.
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_200Parcels_17Networks_order.txt ...
     ...done. (0 seconds, 0 min)
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_200Parcels_17Networks_order_FSLMNI152_2mm.nii.gz ...
     ...done. (0 seconds, 0 min)
    2024-03-04 10:50:05,317 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_200Parcels_17Networks_order_FSLMNI152_2mm.nii.gz
    2024-03-04 10:50:05,349 - JUNIFER - INFO - Found existing xfm file for MNI152NLin6Asym to MNI152Lin at /home/runner/junifer/data/xfms/MNI152NLin6Asym_to_MNI152Lin/MNI152NLin6Asym_to_MNI152Lin_Composite.h5
    2024-03-04 10:50:06,056 - JUNIFER - INFO - Downloading template MNI152Lin in resolution 2
    2024-03-04 10:50:06,154 - JUNIFER - INFO - antsApplyTransforms command to be executed:
    antsApplyTransforms -d 3 -e 3 -n 'GenericLabel[NearestNeighbor]' -i /tmp/tmp6ldyip_m/parcellations9nvsek4m/Schaefer200x17.nii.gz -r /tmp/tmp6ldyip_m/parcellations9nvsek4m/MNI152Lin_T1w_3.0.nii.gz -t /home/runner/junifer/data/xfms/MNI152NLin6Asym_to_MNI152Lin/MNI152NLin6Asym_to_MNI152Lin_Composite.h5 -o /tmp/tmpzp3146so/parcellations2ht1emri/Schaefer200x17_warped_from_MNI152NLin6Asym_to_MNI152Lin.nii.gz
    2024-03-04 10:50:08,173 - JUNIFER - INFO - antsApplyTransforms command succeeded with the following output:
    b''
    2024-03-04 10:50:10,282 - JUNIFER - INFO - Storing in <SQLiteFeatureStorage @ /tmp/tmppz1a1btg/test.sqlite (multiple output)>
    2024-03-04 10:50:10,304 - JUNIFER - INFO - Marker collection fitting done
    2024-03-04 10:50:10,306 - JUNIFER - INFO - Collecting data using SQLiteFeatureStorage
    2024-03-04 10:50:10,306 - JUNIFER - INFO - Collecting data from /tmp/tmppz1a1btg/*test.sqlite
    file: 0it [00:00, ?it/s]
    feature:   0%|          | 0/2 [00:00<?, ?it/s]    feature: 100%|██████████| 2/2 [00:00<00:00, 71.28it/s]
    file: 1it [00:00, 24.79it/s]
    2024-03-04 10:50:10,346 - JUNIFER - INFO - Collect done
    {'1d81ad1f44011f6c4d7e180b2e69045a': {'datagrabber': {'class': 'SPMAuditoryTestingDataGrabber', 'types': ['BOLD', 'T1w']}, 'dependencies': {'nilearn': '0.10.2'}, 'datareader': {'class': 'DefaultDataReader'}, 'type': 'BOLD', 'marker': {'agg_method': 'mean', 'agg_method_params': None, 'class': 'RSSETSMarker', 'masks': None, 'name': 'Schaefer100x17_RSSETS', 'parcellation': 'Schaefer100x17'}, '_element_keys': ['subject'], 'name': 'BOLD_Schaefer100x17_RSSETS'}, '24fef87855ff678fc17e53f2c2ab5e6e': {'datagrabber': {'class': 'SPMAuditoryTestingDataGrabber', 'types': ['BOLD', 'T1w']}, 'dependencies': {'nilearn': '0.10.2'}, 'datareader': {'class': 'DefaultDataReader'}, 'type': 'BOLD', 'marker': {'agg_method': 'mean', 'agg_method_params': None, 'class': 'RSSETSMarker', 'masks': None, 'name': 'Schaefer200x17_RSSETS', 'parcellation': 'Schaefer200x17'}, '_element_keys': ['subject'], 'name': 'BOLD_Schaefer200x17_RSSETS'}}




.. GENERATED FROM PYTHON SOURCE LINES 76-77

Now we take a look at the dataframe

.. GENERATED FROM PYTHON SOURCE LINES 77-78

.. code-block:: default

    df_vbm.head()





.. raw:: html

    <div class="output_subarea output_html rendered_html output_result">
    <div>
    <style scoped>
        .dataframe tbody tr th:only-of-type {
            vertical-align: middle;
        }

        .dataframe tbody tr th {
            vertical-align: top;
        }

        .dataframe thead th {
            text-align: right;
        }
    </style>
    <table border="1" class="dataframe">
      <thead>
        <tr style="text-align: right;">
          <th></th>
          <th></th>
          <th>root_sum_of_squares_ets</th>
        </tr>
        <tr>
          <th>subject</th>
          <th>timepoint</th>
          <th></th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <th rowspan="5" valign="top">sub001</th>
          <th>0</th>
          <td>1471.534513</td>
        </tr>
        <tr>
          <th>1</th>
          <td>78.624350</td>
        </tr>
        <tr>
          <th>2</th>
          <td>45.399273</td>
        </tr>
        <tr>
          <th>3</th>
          <td>69.362580</td>
        </tr>
        <tr>
          <th>4</th>
          <td>52.878724</td>
        </tr>
      </tbody>
    </table>
    </div>
    </div>
    <br />
    <br />


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 13.228 seconds)


.. _sphx_glr_download_auto_examples_run_ets_rss_marker.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_ets_rss_marker.py <run_ets_rss_marker.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_ets_rss_marker.ipynb <run_ets_rss_marker.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
