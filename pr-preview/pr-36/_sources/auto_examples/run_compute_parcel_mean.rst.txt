
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_compute_parcel_mean.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_run_compute_parcel_mean.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_compute_parcel_mean.py:


Computer Parcel Aggregation.
============================

This example uses a ParcelAggregation marker to compute the mean of each parcel
using the Schaefer parcellations (100 rois, 7 Yeo networks) for both a 3D and
4D nifti

Authors: Federico Raimondo

License: BSD 3 clause

.. GENERATED FROM PYTHON SOURCE LINES 13-20

.. code-block:: default


    import nilearn

    from junifer.markers.parcel_aggregation import ParcelAggregation
    from junifer.utils import configure_logging









.. GENERATED FROM PYTHON SOURCE LINES 21-22

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: default

    configure_logging(level="INFO")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2022-12-15 15:43:29,613 - JUNIFER - INFO - ===== Lib Versions =====
    2022-12-15 15:43:29,613 - JUNIFER - INFO - numpy: 1.23.5
    2022-12-15 15:43:29,613 - JUNIFER - INFO - scipy: 1.9.3
    2022-12-15 15:43:29,613 - JUNIFER - INFO - pandas: 1.5.2
    2022-12-15 15:43:29,614 - JUNIFER - INFO - nilearn: 0.9.2
    2022-12-15 15:43:29,614 - JUNIFER - INFO - nibabel: 4.0.2
    2022-12-15 15:43:29,614 - JUNIFER - INFO - junifer: 0.1.dev1
    2022-12-15 15:43:29,614 - JUNIFER - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 26-28

Load the VBM GM data (3d):
- Fetch the Oasis dataset

.. GENERATED FROM PYTHON SOURCE LINES 28-32

.. code-block:: default

    oasis_dataset = nilearn.datasets.fetch_oasis_vbm(n_subjects=1)
    vbm_fname = oasis_dataset.gray_matter_maps[0]
    vbm_img = nilearn.image.load_img(vbm_fname)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Dataset created in /home/runner/nilearn_data/oasis1

    Downloading data from https://www.nitrc.org/frs/download.php/6364/archive_dartel.tgz ...
    Downloaded 58310656 of 905208634 bytes (6.4%,   14.6s remaining)    Downloaded 137199616 of 905208634 bytes (15.2%,   11.3s remaining)    Downloaded 214564864 of 905208634 bytes (23.7%,    9.7s remaining)    Downloaded 292544512 of 905208634 bytes (32.3%,    8.4s remaining)    Downloaded 371630080 of 905208634 bytes (41.1%,    7.3s remaining)    Downloaded 450068480 of 905208634 bytes (49.7%,    6.1s remaining)    Downloaded 525942784 of 905208634 bytes (58.1%,    5.1s remaining)    Downloaded 605495296 of 905208634 bytes (66.9%,    4.0s remaining)    Downloaded 683343872 of 905208634 bytes (75.5%,    2.9s remaining)    Downloaded 721125376 of 905208634 bytes (79.7%,    2.6s remaining)    Downloaded 801120256 of 905208634 bytes (88.5%,    1.4s remaining)    Downloaded 880050176 of 905208634 bytes (97.2%,    0.3s remaining) ...done. (13 seconds, 0 min)
    Extracting data from /home/runner/nilearn_data/oasis1/6d19418bccb98b1333309bd8baa05152/archive_dartel.tgz..... done.
    /opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/nilearn/datasets/struct.py:774: UserWarning: `legacy_format` will default to `False` in release 0.11. Dataset fetchers will then return pandas dataframes by default instead of recarrays.
      warnings.warn(_LEGACY_FORMAT_MSG)




.. GENERATED FROM PYTHON SOURCE LINES 33-36

Load the functional data (4d):
- Fetch the SPM auditory dataset
- Concatenate the functional data into one 4D image

.. GENERATED FROM PYTHON SOURCE LINES 36-39

.. code-block:: default

    s_func_data = nilearn.datasets.fetch_spm_auditory()
    fmri_img = nilearn.image.concat_imgs(s_func_data.func)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Dataset created in /home/runner/nilearn_data/spm_auditory

    Data absent, downloading...
    Downloading data from http://www.fil.ion.ucl.ac.uk/spm/download/data/MoAEpilot/MoAEpilot.zip ...
    Downloaded 3252224 of 34212021 bytes (9.5%,   10.1s remaining)    Downloaded 6873088 of 34212021 bytes (20.1%,    8.2s remaining)    Downloaded 7782400 of 34212021 bytes (22.7%,   10.4s remaining)    Downloaded 8429568 of 34212021 bytes (24.6%,   12.4s remaining)    Downloaded 9019392 of 34212021 bytes (26.4%,   14.2s remaining)    Downloaded 9453568 of 34212021 bytes (27.6%,   15.9s remaining)    Downloaded 9773056 of 34212021 bytes (28.6%,   17.7s remaining)    Downloaded 10141696 of 34212021 bytes (29.6%,   19.3s remaining)    Downloaded 10575872 of 34212021 bytes (30.9%,   20.5s remaining)    Downloaded 11059200 of 34212021 bytes (32.3%,   21.3s remaining)    Downloaded 11567104 of 34212021 bytes (33.8%,   21.9s remaining)    Downloaded 11993088 of 34212021 bytes (35.1%,   22.6s remaining)    Downloaded 12214272 of 34212021 bytes (35.7%,   23.9s remaining)    Downloaded 12419072 of 34212021 bytes (36.3%,   25.1s remaining)    Downloaded 12582912 of 34212021 bytes (36.8%,   26.4s remaining)    Downloaded 12738560 of 34212021 bytes (37.2%,   27.7s remaining)    Downloaded 12926976 of 34212021 bytes (37.8%,   28.7s remaining)    Downloaded 13115392 of 34212021 bytes (38.3%,   29.7s remaining)    Downloaded 13344768 of 34212021 bytes (39.0%,   30.5s remaining)    Downloaded 13606912 of 34212021 bytes (39.8%,   31.0s remaining)    Downloaded 13901824 of 34212021 bytes (40.6%,   31.5s remaining)    Downloaded 14131200 of 34212021 bytes (41.3%,   32.1s remaining)    Downloaded 14319616 of 34212021 bytes (41.9%,   32.7s remaining)    Downloaded 14499840 of 34212021 bytes (42.4%,   33.4s remaining)    Downloaded 14753792 of 34212021 bytes (43.1%,   33.7s remaining)    Downloaded 15073280 of 34212021 bytes (44.1%,   33.7s remaining)    Downloaded 15310848 of 34212021 bytes (44.8%,   34.1s remaining)    Downloaded 15532032 of 34212021 bytes (45.4%,   34.4s remaining)    Downloaded 15777792 of 34212021 bytes (46.1%,   34.6s remaining)    Downloaded 15998976 of 34212021 bytes (46.8%,   34.9s remaining)    Downloaded 16244736 of 34212021 bytes (47.5%,   35.1s remaining)    Downloaded 16457728 of 34212021 bytes (48.1%,   35.3s remaining)    Downloaded 16687104 of 34212021 bytes (48.8%,   35.5s remaining)    Downloaded 16965632 of 34212021 bytes (49.6%,   35.4s remaining)    Downloaded 17154048 of 34212021 bytes (50.1%,   35.7s remaining)    Downloaded 17301504 of 34212021 bytes (50.6%,   36.2s remaining)    Downloaded 17481728 of 34212021 bytes (51.1%,   36.4s remaining)    Downloaded 17727488 of 34212021 bytes (51.8%,   36.4s remaining)    Downloaded 17973248 of 34212021 bytes (52.5%,   36.2s remaining)    Downloaded 18194432 of 34212021 bytes (53.2%,   36.2s remaining)    Downloaded 18432000 of 34212021 bytes (53.9%,   36.2s remaining)    Downloaded 18661376 of 34212021 bytes (54.5%,   36.0s remaining)    Downloaded 18874368 of 34212021 bytes (55.2%,   36.0s remaining)    Downloaded 19152896 of 34212021 bytes (56.0%,   35.7s remaining)    Downloaded 19464192 of 34212021 bytes (56.9%,   35.2s remaining)    Downloaded 19701760 of 34212021 bytes (57.6%,   34.9s remaining)    Downloaded 19931136 of 34212021 bytes (58.3%,   34.7s remaining)    Downloaded 20176896 of 34212021 bytes (59.0%,   34.4s remaining)    Downloaded 20422656 of 34212021 bytes (59.7%,   34.1s remaining)    Downloaded 20701184 of 34212021 bytes (60.5%,   33.6s remaining)    Downloaded 20979712 of 34212021 bytes (61.3%,   33.1s remaining)    Downloaded 21274624 of 34212021 bytes (62.2%,   32.6s remaining)    Downloaded 21479424 of 34212021 bytes (62.8%,   32.4s remaining)    Downloaded 21635072 of 34212021 bytes (63.2%,   32.3s remaining)    Downloaded 21848064 of 34212021 bytes (63.9%,   32.0s remaining)    Downloaded 22134784 of 34212021 bytes (64.7%,   31.4s remaining)    Downloaded 22478848 of 34212021 bytes (65.7%,   30.6s remaining)    Downloaded 22855680 of 34212021 bytes (66.8%,   29.7s remaining)    Downloaded 23207936 of 34212021 bytes (67.8%,   28.8s remaining)    Downloaded 23470080 of 34212021 bytes (68.6%,   28.2s remaining)    Downloaded 23748608 of 34212021 bytes (69.4%,   27.7s remaining)    Downloaded 24084480 of 34212021 bytes (70.4%,   26.8s remaining)    Downloaded 24469504 of 34212021 bytes (71.5%,   25.8s remaining)    Downloaded 24936448 of 34212021 bytes (72.9%,   24.5s remaining)    Downloaded 25288704 of 34212021 bytes (73.9%,   23.6s remaining)    Downloaded 25591808 of 34212021 bytes (74.8%,   22.9s remaining)    Downloaded 25878528 of 34212021 bytes (75.6%,   22.2s remaining)    Downloaded 26157056 of 34212021 bytes (76.5%,   21.6s remaining)    Downloaded 26427392 of 34212021 bytes (77.2%,   20.9s remaining)    Downloaded 26738688 of 34212021 bytes (78.2%,   20.2s remaining)    Downloaded 27115520 of 34212021 bytes (79.3%,   19.1s remaining)    Downloaded 27451392 of 34212021 bytes (80.2%,   18.3s remaining)    Downloaded 27836416 of 34212021 bytes (81.4%,   17.2s remaining)    Downloaded 28246016 of 34212021 bytes (82.6%,   16.1s remaining)    Downloaded 28712960 of 34212021 bytes (83.9%,   14.8s remaining)    Downloaded 29138944 of 34212021 bytes (85.2%,   13.6s remaining)    Downloaded 29630464 of 34212021 bytes (86.6%,   12.2s remaining)    Downloaded 30015488 of 34212021 bytes (87.7%,   11.2s remaining)    Downloaded 30310400 of 34212021 bytes (88.6%,   10.5s remaining)    Downloaded 30580736 of 34212021 bytes (89.4%,    9.8s remaining)    Downloaded 30892032 of 34212021 bytes (90.3%,    8.9s remaining)    Downloaded 31227904 of 34212021 bytes (91.3%,    8.1s remaining)    Downloaded 31490048 of 34212021 bytes (92.0%,    7.4s remaining)    Downloaded 31793152 of 34212021 bytes (92.9%,    6.6s remaining)    Downloaded 32178176 of 34212021 bytes (94.1%,    5.5s remaining)    Downloaded 32546816 of 34212021 bytes (95.1%,    4.5s remaining)    Downloaded 32948224 of 34212021 bytes (96.3%,    3.4s remaining)    Downloaded 33366016 of 34212021 bytes (97.5%,    2.3s remaining)    Downloaded 33800192 of 34212021 bytes (98.8%,    1.1s remaining)    Downloaded 34127872 of 34212021 bytes (99.8%,    0.2s remaining) ...done. (94 seconds, 1 min)
    Extracting data from /home/runner/nilearn_data/spm_auditory/sub001/MoAEpilot.zip..... done.




.. GENERATED FROM PYTHON SOURCE LINES 40-41

Define the marker

.. GENERATED FROM PYTHON SOURCE LINES 41-43

.. code-block:: default

    marker = ParcelAggregation(parcellation="Schaefer100x7", method="mean")








.. GENERATED FROM PYTHON SOURCE LINES 44-45

Prepare the input

.. GENERATED FROM PYTHON SOURCE LINES 45-50

.. code-block:: default

    input = {
        "BOLD": {"data": fmri_img, "meta": {"element": "subject1"}},
        "VBM_GM": {"data": vbm_img, "meta": {"element": "subject1"}},
    }








.. GENERATED FROM PYTHON SOURCE LINES 51-52

Fit transform the data

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: default

    out = marker.fit_transform(input)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2022-12-15 15:45:25,715 - JUNIFER - INFO - Computing BOLD
    2022-12-15 15:45:25,716 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2022-12-15 15:45:25,716 - JUNIFER - INFO - Parcellatikon parameters:
    2022-12-15 15:45:25,716 - JUNIFER - INFO -      n_rois: 100
    2022-12-15 15:45:25,716 - JUNIFER - INFO -      yeo_networks: 7
    2022-12-15 15:45:25,716 - JUNIFER - INFO -      resolution: 3.0
    2022-12-15 15:45:25,716 - JUNIFER - INFO - At least one of the parcellation files are missing. Fetching using nilearn.

    Dataset created in /home/runner/junifer/data/parcellations/schaefer_2018

    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order.txt ...
     ...done. (0 seconds, 0 min)
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz ...
     ...done. (0 seconds, 0 min)
    2022-12-15 15:45:26,110 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2022-12-15 15:45:28,033 - JUNIFER - INFO - No storage specified, returning dictionary
    2022-12-15 15:45:28,033 - JUNIFER - INFO - Computing VBM_GM
    2022-12-15 15:45:28,033 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2022-12-15 15:45:28,033 - JUNIFER - INFO - Parcellatikon parameters:
    2022-12-15 15:45:28,033 - JUNIFER - INFO -      n_rois: 100
    2022-12-15 15:45:28,034 - JUNIFER - INFO -      yeo_networks: 7
    2022-12-15 15:45:28,034 - JUNIFER - INFO -      resolution: 2.0
    2022-12-15 15:45:28,036 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2022-12-15 15:45:28,737 - JUNIFER - INFO - No storage specified, returning dictionary




.. GENERATED FROM PYTHON SOURCE LINES 55-56

Check the results

.. GENERATED FROM PYTHON SOURCE LINES 56-62

.. code-block:: default


    print(out.keys())
    print(out["VBM_GM"]["data"].shape)  # Shape is (1 x parcels)

    print(out.keys())
    print(out["BOLD"]["data"].shape)  # Shape is (timepoints x parcels)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    dict_keys(['BOLD', 'VBM_GM'])
    (1, 100)
    dict_keys(['BOLD', 'VBM_GM'])
    (96, 100)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  59.129 seconds)


.. _sphx_glr_download_auto_examples_run_compute_parcel_mean.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_compute_parcel_mean.py <run_compute_parcel_mean.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_compute_parcel_mean.ipynb <run_compute_parcel_mean.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
