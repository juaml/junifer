
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_compute_parcel_mean.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_run_compute_parcel_mean.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_compute_parcel_mean.py:


Computer Parcel Aggregation.
============================

This example uses a ParcelAggregation marker to compute the mean of each parcel
using the Schaefer parcellations (100 rois, 7 Yeo networks) for both a 3D and
4D nifti

Authors: Federico Raimondo

License: BSD 3 clause

.. GENERATED FROM PYTHON SOURCE LINES 13-20

.. code-block:: default


    import nilearn

    from junifer.markers.parcel_aggregation import ParcelAggregation
    from junifer.utils import configure_logging









.. GENERATED FROM PYTHON SOURCE LINES 21-22

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: default

    configure_logging(level="INFO")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2022-11-24 09:24:12,603 - JUNIFER - INFO - ===== Lib Versions =====
    2022-11-24 09:24:12,603 - JUNIFER - INFO - numpy: 1.23.5
    2022-11-24 09:24:12,603 - JUNIFER - INFO - scipy: 1.9.3
    2022-11-24 09:24:12,603 - JUNIFER - INFO - pandas: 1.5.2
    2022-11-24 09:24:12,603 - JUNIFER - INFO - nilearn: 0.9.2
    2022-11-24 09:24:12,603 - JUNIFER - INFO - nibabel: 4.0.2
    2022-11-24 09:24:12,604 - JUNIFER - INFO - junifer: 0.0.1.dev1
    2022-11-24 09:24:12,604 - JUNIFER - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 26-28

Load the VBM GM data (3d):
- Fetch the Oasis dataset

.. GENERATED FROM PYTHON SOURCE LINES 28-32

.. code-block:: default

    oasis_dataset = nilearn.datasets.fetch_oasis_vbm(n_subjects=1)
    vbm_fname = oasis_dataset.gray_matter_maps[0]
    vbm_img = nilearn.image.load_img(vbm_fname)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Dataset created in /home/runner/nilearn_data/oasis1

    Downloading data from https://www.nitrc.org/frs/download.php/6364/archive_dartel.tgz ...
    Downloaded 52994048 of 905208634 bytes (5.9%,   16.1s remaining)    Downloaded 87900160 of 905208634 bytes (9.7%,   18.7s remaining)    Downloaded 99041280 of 905208634 bytes (10.9%,   24.6s remaining)    Downloaded 107175936 of 905208634 bytes (11.8%,   30.0s remaining)    Downloaded 116097024 of 905208634 bytes (12.8%,   34.2s remaining)    Downloaded 123142144 of 905208634 bytes (13.6%,   38.4s remaining)    Downloaded 131284992 of 905208634 bytes (14.5%,   41.5s remaining)    Downloaded 138870784 of 905208634 bytes (15.3%,   44.4s remaining)    Downloaded 148463616 of 905208634 bytes (16.4%,   46.2s remaining)    Downloaded 158416896 of 905208634 bytes (17.5%,   47.5s remaining)    Downloaded 167829504 of 905208634 bytes (18.5%,   48.7s remaining)    Downloaded 176799744 of 905208634 bytes (19.5%,   49.9s remaining)    Downloaded 187514880 of 905208634 bytes (20.7%,   50.2s remaining)    Downloaded 196608000 of 905208634 bytes (21.7%,   50.9s remaining)    Downloaded 205799424 of 905208634 bytes (22.7%,   51.4s remaining)    Downloaded 216784896 of 905208634 bytes (23.9%,   51.2s remaining)    Downloaded 224796672 of 905208634 bytes (24.8%,   51.8s remaining)    Downloaded 233537536 of 905208634 bytes (25.8%,   52.2s remaining)    Downloaded 241876992 of 905208634 bytes (26.7%,   52.6s remaining)    Downloaded 250396672 of 905208634 bytes (27.7%,   52.9s remaining)    Downloaded 258998272 of 905208634 bytes (28.6%,   53.0s remaining)    Downloaded 267018240 of 905208634 bytes (29.5%,   53.1s remaining)    Downloaded 276160512 of 905208634 bytes (30.5%,   52.9s remaining)    Downloaded 282181632 of 905208634 bytes (31.2%,   53.5s remaining)    Downloaded 291225600 of 905208634 bytes (32.2%,   53.3s remaining)    Downloaded 300957696 of 905208634 bytes (33.2%,   52.8s remaining)    Downloaded 308248576 of 905208634 bytes (34.1%,   52.8s remaining)    Downloaded 316489728 of 905208634 bytes (35.0%,   52.6s remaining)    Downloaded 322797568 of 905208634 bytes (35.7%,   52.9s remaining)    Downloaded 330792960 of 905208634 bytes (36.5%,   52.6s remaining)    Downloaded 337502208 of 905208634 bytes (37.3%,   52.8s remaining)    Downloaded 344801280 of 905208634 bytes (38.1%,   52.7s remaining)    Downloaded 349986816 of 905208634 bytes (38.7%,   53.0s remaining)    Downloaded 356474880 of 905208634 bytes (39.4%,   53.0s remaining)    Downloaded 362209280 of 905208634 bytes (40.0%,   53.1s remaining)    Downloaded 371163136 of 905208634 bytes (41.0%,   52.5s remaining)    Downloaded 378789888 of 905208634 bytes (41.8%,   52.1s remaining)    Downloaded 384442368 of 905208634 bytes (42.5%,   52.1s remaining)    Downloaded 389185536 of 905208634 bytes (43.0%,   52.4s remaining)    Downloaded 395083776 of 905208634 bytes (43.6%,   52.3s remaining)    Downloaded 400392192 of 905208634 bytes (44.2%,   52.3s remaining)    Downloaded 408444928 of 905208634 bytes (45.1%,   51.7s remaining)    Downloaded 416784384 of 905208634 bytes (46.0%,   51.0s remaining)    Downloaded 425459712 of 905208634 bytes (47.0%,   50.2s remaining)    Downloaded 431898624 of 905208634 bytes (47.7%,   49.9s remaining)    Downloaded 440377344 of 905208634 bytes (48.6%,   49.1s remaining)    Downloaded 446226432 of 905208634 bytes (49.3%,   49.0s remaining)    Downloaded 452444160 of 905208634 bytes (50.0%,   48.7s remaining)    Downloaded 457990144 of 905208634 bytes (50.6%,   48.5s remaining)    Downloaded 464773120 of 905208634 bytes (51.3%,   48.0s remaining)    Downloaded 471654400 of 905208634 bytes (52.1%,   47.5s remaining)    Downloaded 478715904 of 905208634 bytes (52.9%,   46.9s remaining)    Downloaded 485367808 of 905208634 bytes (53.6%,   46.4s remaining)    Downloaded 491814912 of 905208634 bytes (54.3%,   46.0s remaining)    Downloaded 497811456 of 905208634 bytes (55.0%,   45.6s remaining)    Downloaded 504348672 of 905208634 bytes (55.7%,   45.1s remaining)    Downloaded 511500288 of 905208634 bytes (56.5%,   44.4s remaining)    Downloaded 515473408 of 905208634 bytes (56.9%,   44.4s remaining)    Downloaded 521134080 of 905208634 bytes (57.6%,   44.0s remaining)    Downloaded 527966208 of 905208634 bytes (58.3%,   43.4s remaining)    Downloaded 535977984 of 905208634 bytes (59.2%,   42.5s remaining)    Downloaded 543694848 of 905208634 bytes (60.1%,   41.7s remaining)    Downloaded 551411712 of 905208634 bytes (60.9%,   40.9s remaining)    Downloaded 560111616 of 905208634 bytes (61.9%,   39.9s remaining)    Downloaded 571588608 of 905208634 bytes (63.1%,   38.4s remaining)    Downloaded 581459968 of 905208634 bytes (64.2%,   37.2s remaining)    Downloaded 592011264 of 905208634 bytes (65.4%,   35.9s remaining)    Downloaded 603979776 of 905208634 bytes (66.7%,   34.3s remaining)    Downloaded 611106816 of 905208634 bytes (67.5%,   33.6s remaining)    Downloaded 621633536 of 905208634 bytes (68.7%,   32.3s remaining)    Downloaded 630202368 of 905208634 bytes (69.6%,   31.4s remaining)    Downloaded 638844928 of 905208634 bytes (70.6%,   30.4s remaining)    Downloaded 646815744 of 905208634 bytes (71.5%,   29.5s remaining)    Downloaded 657580032 of 905208634 bytes (72.6%,   28.2s remaining)    Downloaded 669868032 of 905208634 bytes (74.0%,   26.7s remaining)    Downloaded 682500096 of 905208634 bytes (75.4%,   25.1s remaining)    Downloaded 697565184 of 905208634 bytes (77.1%,   23.2s remaining)    Downloaded 713097216 of 905208634 bytes (78.8%,   21.3s remaining)    Downloaded 727007232 of 905208634 bytes (80.3%,   19.6s remaining)    Downloaded 738263040 of 905208634 bytes (81.6%,   18.3s remaining)    Downloaded 749830144 of 905208634 bytes (82.8%,   17.0s remaining)    Downloaded 762740736 of 905208634 bytes (84.3%,   15.5s remaining)    Downloaded 774160384 of 905208634 bytes (85.5%,   14.2s remaining)    Downloaded 786399232 of 905208634 bytes (86.9%,   12.9s remaining)    Downloaded 797319168 of 905208634 bytes (88.1%,   11.7s remaining)    Downloaded 806952960 of 905208634 bytes (89.1%,   10.6s remaining)    Downloaded 816291840 of 905208634 bytes (90.2%,    9.6s remaining)    Downloaded 827703296 of 905208634 bytes (91.4%,    8.3s remaining)    Downloaded 839786496 of 905208634 bytes (92.8%,    7.0s remaining)    Downloaded 847372288 of 905208634 bytes (93.6%,    6.2s remaining)    Downloaded 859521024 of 905208634 bytes (95.0%,    4.9s remaining)    Downloaded 869883904 of 905208634 bytes (96.1%,    3.8s remaining)    Downloaded 880672768 of 905208634 bytes (97.3%,    2.6s remaining)    Downloaded 893427712 of 905208634 bytes (98.7%,    1.3s remaining) ...done. (97 seconds, 1 min)
    Extracting data from /home/runner/nilearn_data/oasis1/6d19418bccb98b1333309bd8baa05152/archive_dartel.tgz..... done.
    /opt/hostedtoolcache/Python/3.10.8/x64/lib/python3.10/site-packages/nilearn/datasets/struct.py:774: UserWarning: `legacy_format` will default to `False` in release 0.11. Dataset fetchers will then return pandas dataframes by default instead of recarrays.
      warnings.warn(_LEGACY_FORMAT_MSG)




.. GENERATED FROM PYTHON SOURCE LINES 33-36

Load the functional data (4d):
- Fetch the SPM auditory dataset
- Concatenate the functional data into one 4D image

.. GENERATED FROM PYTHON SOURCE LINES 36-39

.. code-block:: default

    s_func_data = nilearn.datasets.fetch_spm_auditory()
    fmri_img = nilearn.image.concat_imgs(s_func_data.func)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Dataset created in /home/runner/nilearn_data/spm_auditory

    Data absent, downloading...
    Downloading data from http://www.fil.ion.ucl.ac.uk/spm/download/data/MoAEpilot/MoAEpilot.zip ...
    Downloaded 2949120 of 34212021 bytes (8.6%,   10.6s remaining)    Downloaded 9682944 of 34212021 bytes (28.3%,    5.1s remaining)    Downloaded 14786560 of 34212021 bytes (43.2%,    4.0s remaining)    Downloaded 20127744 of 34212021 bytes (58.8%,    2.9s remaining)    Downloaded 26099712 of 34212021 bytes (76.3%,    1.6s remaining)    Downloaded 31662080 of 34212021 bytes (92.5%,    0.5s remaining) ...done. (8 seconds, 0 min)
    Extracting data from /home/runner/nilearn_data/spm_auditory/sub001/MoAEpilot.zip..... done.




.. GENERATED FROM PYTHON SOURCE LINES 40-41

Define the marker

.. GENERATED FROM PYTHON SOURCE LINES 41-43

.. code-block:: default

    marker = ParcelAggregation(parcellation="Schaefer100x7", method="mean")








.. GENERATED FROM PYTHON SOURCE LINES 44-45

Prepare the input

.. GENERATED FROM PYTHON SOURCE LINES 45-47

.. code-block:: default

    input = {"BOLD": {"data": fmri_img}, "VBM_GM": {"data": vbm_img}}








.. GENERATED FROM PYTHON SOURCE LINES 48-49

Fit transform the data

.. GENERATED FROM PYTHON SOURCE LINES 49-51

.. code-block:: default

    out = marker.fit_transform(input)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2022-11-24 09:26:07,194 - JUNIFER - INFO - Computing BOLD
    2022-11-24 09:26:07,194 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2022-11-24 09:26:07,194 - JUNIFER - INFO - Parcellatikon parameters:
    2022-11-24 09:26:07,194 - JUNIFER - INFO -      n_rois: 100
    2022-11-24 09:26:07,194 - JUNIFER - INFO -      yeo_networks: 7
    2022-11-24 09:26:07,194 - JUNIFER - INFO -      resolution: 3.0
    2022-11-24 09:26:07,195 - JUNIFER - INFO - At least one of the parcellation files are missing. Fetching using nilearn.

    Dataset created in /home/runner/junifer/data/parcellations/schaefer_2018

    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order.txt ...
     ...done. (0 seconds, 0 min)
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz ...
     ...done. (0 seconds, 0 min)
    2022-11-24 09:26:07,264 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2022-11-24 09:26:08,568 - JUNIFER - INFO - No storage specified, returning dictionary
    2022-11-24 09:26:08,568 - JUNIFER - INFO - Computing VBM_GM
    2022-11-24 09:26:08,568 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2022-11-24 09:26:08,568 - JUNIFER - INFO - Parcellatikon parameters:
    2022-11-24 09:26:08,568 - JUNIFER - INFO -      n_rois: 100
    2022-11-24 09:26:08,568 - JUNIFER - INFO -      yeo_networks: 7
    2022-11-24 09:26:08,568 - JUNIFER - INFO -      resolution: 2.0
    2022-11-24 09:26:08,571 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2022-11-24 09:26:09,155 - JUNIFER - INFO - No storage specified, returning dictionary




.. GENERATED FROM PYTHON SOURCE LINES 52-53

Check the results

.. GENERATED FROM PYTHON SOURCE LINES 53-59

.. code-block:: default


    print(out.keys())
    print(out["VBM_GM"]["data"].shape)  # Shape is (1 x parcels)

    print(out.keys())
    print(out["BOLD"]["data"].shape)  # Shape is (timepoints x parcels)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    dict_keys(['BOLD', 'VBM_GM'])
    (1, 100)
    dict_keys(['BOLD', 'VBM_GM'])
    (96, 100)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  56.558 seconds)


.. _sphx_glr_download_auto_examples_run_compute_parcel_mean.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_compute_parcel_mean.py <run_compute_parcel_mean.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_compute_parcel_mean.ipynb <run_compute_parcel_mean.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
