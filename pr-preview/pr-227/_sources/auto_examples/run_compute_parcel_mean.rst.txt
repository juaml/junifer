
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_compute_parcel_mean.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_run_compute_parcel_mean.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_compute_parcel_mean.py:


Computer Parcel Aggregation.
============================

This example uses a ParcelAggregation marker to compute the mean of each parcel
using the Schaefer parcellations (100 rois, 7 Yeo networks) for both a 3D and
4D nifti

Authors: Federico Raimondo

License: BSD 3 clause

.. GENERATED FROM PYTHON SOURCE LINES 13-20

.. code-block:: default


    import nilearn

    from junifer.markers.parcel_aggregation import ParcelAggregation
    from junifer.utils import configure_logging









.. GENERATED FROM PYTHON SOURCE LINES 21-22

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: default

    configure_logging(level="INFO")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-05-16 13:54:00,845 - JUNIFER - INFO - ===== Lib Versions =====
    2023-05-16 13:54:00,845 - JUNIFER - INFO - numpy: 1.23.5
    2023-05-16 13:54:00,845 - JUNIFER - INFO - scipy: 1.10.1
    2023-05-16 13:54:00,845 - JUNIFER - INFO - pandas: 1.5.3
    2023-05-16 13:54:00,845 - JUNIFER - INFO - nilearn: 0.10.0
    2023-05-16 13:54:00,845 - JUNIFER - INFO - nibabel: 4.0.2
    2023-05-16 13:54:00,846 - JUNIFER - INFO - junifer: 0.0.3.dev77
    2023-05-16 13:54:00,846 - JUNIFER - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 26-28

Load the VBM GM data (3d):
- Fetch the Oasis dataset

.. GENERATED FROM PYTHON SOURCE LINES 28-32

.. code-block:: default

    oasis_dataset = nilearn.datasets.fetch_oasis_vbm(n_subjects=1)
    vbm_fname = oasis_dataset.gray_matter_maps[0]
    vbm_img = nilearn.image.load_img(vbm_fname)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Dataset created in /home/runner/nilearn_data/oasis1

    Downloading data from https://www.nitrc.org/frs/download.php/6364/archive_dartel.tgz ...
    Downloaded 221519872 of 905208634 bytes (24.5%,    3.1s remaining)    Downloaded 455065600 of 905208634 bytes (50.3%,    2.0s remaining)    Downloaded 682270720 of 905208634 bytes (75.4%,    1.0s remaining)    Downloaded 902881280 of 905208634 bytes (99.7%,    0.0s remaining) ...done. (4 seconds, 0 min)
    Extracting data from /home/runner/nilearn_data/oasis1/6d19418bccb98b1333309bd8baa05152/archive_dartel.tgz..... done.
    /opt/hostedtoolcache/Python/3.10.11/x64/lib/python3.10/site-packages/nilearn/datasets/struct.py:733: UserWarning: `legacy_format` will default to `False` in release 0.11. Dataset fetchers will then return pandas dataframes by default instead of recarrays.
      warnings.warn(_LEGACY_FORMAT_MSG)




.. GENERATED FROM PYTHON SOURCE LINES 33-36

Load the functional data (4d):
- Fetch the SPM auditory dataset
- Concatenate the functional data into one 4D image

.. GENERATED FROM PYTHON SOURCE LINES 36-39

.. code-block:: default

    s_func_data = nilearn.datasets.fetch_spm_auditory()
    fmri_img = nilearn.image.concat_imgs(s_func_data.func)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Dataset created in /home/runner/nilearn_data/spm_auditory

    Data absent, downloading...
    Downloading data from http://www.fil.ion.ucl.ac.uk/spm/download/data/MoAEpilot/MoAEpilot.zip ...
    Downloaded 327680 of 34212021 bytes (1.0%,  1.8min remaining)    Downloaded 679936 of 34212021 bytes (2.0%,  1.7min remaining)    Downloaded 1073152 of 34212021 bytes (3.1%,  1.6min remaining)    Downloaded 1302528 of 34212021 bytes (3.8%,  1.8min remaining)    Downloaded 1613824 of 34212021 bytes (4.7%,  1.8min remaining)    Downloaded 1949696 of 34212021 bytes (5.7%,  1.7min remaining)    Downloaded 2416640 of 34212021 bytes (7.1%,  1.6min remaining)    Downloaded 2883584 of 34212021 bytes (8.4%,  1.5min remaining)    Downloaded 3366912 of 34212021 bytes (9.8%,  1.4min remaining)    Downloaded 3874816 of 34212021 bytes (11.3%,  1.4min remaining)    Downloaded 4358144 of 34212021 bytes (12.7%,  1.3min remaining)    Downloaded 4923392 of 34212021 bytes (14.4%,  1.2min remaining)    Downloaded 5365760 of 34212021 bytes (15.7%,  1.2min remaining)    Downloaded 5742592 of 34212021 bytes (16.8%,  1.2min remaining)    Downloaded 6037504 of 34212021 bytes (17.6%,  1.2min remaining)    Downloaded 6471680 of 34212021 bytes (18.9%,  1.2min remaining)    Downloaded 6873088 of 34212021 bytes (20.1%,  1.2min remaining)    Downloaded 7372800 of 34212021 bytes (21.6%,  1.1min remaining)    Downloaded 7839744 of 34212021 bytes (22.9%,  1.1min remaining)    Downloaded 8421376 of 34212021 bytes (24.6%,  1.1min remaining)    Downloaded 9084928 of 34212021 bytes (26.6%,  1.0min remaining)    Downloaded 9584640 of 34212021 bytes (28.0%,   58.7s remaining)    Downloaded 10125312 of 34212021 bytes (29.6%,   56.7s remaining)    Downloaded 10625024 of 34212021 bytes (31.1%,   55.1s remaining)    Downloaded 11108352 of 34212021 bytes (32.5%,   53.8s remaining)    Downloaded 11624448 of 34212021 bytes (34.0%,   52.2s remaining)    Downloaded 12263424 of 34212021 bytes (35.8%,   50.0s remaining)    Downloaded 12664832 of 34212021 bytes (37.0%,   49.3s remaining)    Downloaded 13017088 of 34212021 bytes (38.0%,   48.8s remaining)    Downloaded 13508608 of 34212021 bytes (39.5%,   47.5s remaining)    Downloaded 14090240 of 34212021 bytes (41.2%,   45.7s remaining)    Downloaded 14671872 of 34212021 bytes (42.9%,   44.0s remaining)    Downloaded 15155200 of 34212021 bytes (44.3%,   42.8s remaining)    Downloaded 15695872 of 34212021 bytes (45.9%,   41.4s remaining)    Downloaded 16252928 of 34212021 bytes (47.5%,   39.9s remaining)    Downloaded 16752640 of 34212021 bytes (49.0%,   38.7s remaining)    Downloaded 17309696 of 34212021 bytes (50.6%,   37.3s remaining)    Downloaded 17784832 of 34212021 bytes (52.0%,   36.2s remaining)    Downloaded 18194432 of 34212021 bytes (53.2%,   35.4s remaining)    Downloaded 18587648 of 34212021 bytes (54.3%,   34.7s remaining)    Downloaded 18980864 of 34212021 bytes (55.5%,   33.9s remaining)    Downloaded 19480576 of 34212021 bytes (56.9%,   32.8s remaining)    Downloaded 19955712 of 34212021 bytes (58.3%,   31.7s remaining)    Downloaded 20267008 of 34212021 bytes (59.2%,   31.2s remaining)    Downloaded 20643840 of 34212021 bytes (60.3%,   30.5s remaining)    Downloaded 21061632 of 34212021 bytes (61.6%,   29.6s remaining)    Downloaded 21405696 of 34212021 bytes (62.6%,   29.0s remaining)    Downloaded 21839872 of 34212021 bytes (63.8%,   28.0s remaining)    Downloaded 22282240 of 34212021 bytes (65.1%,   27.1s remaining)    Downloaded 22732800 of 34212021 bytes (66.4%,   26.0s remaining)    Downloaded 23101440 of 34212021 bytes (67.5%,   25.3s remaining)    Downloaded 23543808 of 34212021 bytes (68.8%,   24.3s remaining)    Downloaded 24002560 of 34212021 bytes (70.2%,   23.2s remaining)    Downloaded 24543232 of 34212021 bytes (71.7%,   21.9s remaining)    Downloaded 25223168 of 34212021 bytes (73.7%,   20.2s remaining)    Downloaded 25837568 of 34212021 bytes (75.5%,   18.7s remaining)    Downloaded 26525696 of 34212021 bytes (77.5%,   17.0s remaining)    Downloaded 27090944 of 34212021 bytes (79.2%,   15.7s remaining)    Downloaded 27795456 of 34212021 bytes (81.2%,   14.0s remaining)    Downloaded 28598272 of 34212021 bytes (83.6%,   12.1s remaining)    Downloaded 29409280 of 34212021 bytes (86.0%,   10.2s remaining)    Downloaded 30089216 of 34212021 bytes (87.9%,    8.7s remaining)    Downloaded 30785536 of 34212021 bytes (90.0%,    7.2s remaining)    Downloaded 31383552 of 34212021 bytes (91.7%,    5.9s remaining)    Downloaded 31932416 of 34212021 bytes (93.3%,    4.8s remaining)    Downloaded 32555008 of 34212021 bytes (95.2%,    3.5s remaining)    Downloaded 33021952 of 34212021 bytes (96.5%,    2.5s remaining)    Downloaded 33316864 of 34212021 bytes (97.4%,    1.9s remaining)    Downloaded 33595392 of 34212021 bytes (98.2%,    1.3s remaining)    Downloaded 33923072 of 34212021 bytes (99.2%,    0.6s remaining) ...done. (74 seconds, 1 min)
    Extracting data from /home/runner/nilearn_data/spm_auditory/sub001/MoAEpilot.zip..... done.




.. GENERATED FROM PYTHON SOURCE LINES 40-41

Define the marker

.. GENERATED FROM PYTHON SOURCE LINES 41-43

.. code-block:: default

    marker = ParcelAggregation(parcellation="Schaefer100x7", method="mean")








.. GENERATED FROM PYTHON SOURCE LINES 44-45

Prepare the input

.. GENERATED FROM PYTHON SOURCE LINES 45-50

.. code-block:: default

    input = {
        "BOLD": {"data": fmri_img, "meta": {"element": "subject1"}},
        "VBM_GM": {"data": vbm_img, "meta": {"element": "subject1"}},
    }








.. GENERATED FROM PYTHON SOURCE LINES 51-52

Fit transform the data

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: default

    out = marker.fit_transform(input)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-05-16 13:55:28,693 - JUNIFER - INFO - Computing BOLD
    2023-05-16 13:55:28,694 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2023-05-16 13:55:28,694 - JUNIFER - INFO - Parcellation parameters:
    2023-05-16 13:55:28,694 - JUNIFER - INFO -      n_rois: 100
    2023-05-16 13:55:28,694 - JUNIFER - INFO -      yeo_networks: 7
    2023-05-16 13:55:28,694 - JUNIFER - INFO -      resolution: 3.0
    2023-05-16 13:55:28,694 - JUNIFER - INFO - At least one of the parcellation files are missing. Fetching using nilearn.

    Dataset created in /home/runner/junifer/data/parcellations/schaefer_2018

    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order.txt ...
     ...done. (0 seconds, 0 min)
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz ...
     ...done. (0 seconds, 0 min)
    2023-05-16 13:55:28,842 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2023-05-16 13:55:30,699 - JUNIFER - INFO - No storage specified, returning dictionary
    2023-05-16 13:55:30,700 - JUNIFER - INFO - Computing VBM_GM
    2023-05-16 13:55:30,700 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2023-05-16 13:55:30,700 - JUNIFER - INFO - Parcellation parameters:
    2023-05-16 13:55:30,700 - JUNIFER - INFO -      n_rois: 100
    2023-05-16 13:55:30,700 - JUNIFER - INFO -      yeo_networks: 7
    2023-05-16 13:55:30,700 - JUNIFER - INFO -      resolution: 2.0
    2023-05-16 13:55:30,703 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2023-05-16 13:55:31,655 - JUNIFER - INFO - No storage specified, returning dictionary




.. GENERATED FROM PYTHON SOURCE LINES 55-56

Check the results

.. GENERATED FROM PYTHON SOURCE LINES 56-62

.. code-block:: default


    print(out.keys())
    print(out["VBM_GM"]["data"].shape)  # Shape is (1 x parcels)

    print(out.keys())
    print(out["BOLD"]["data"].shape)  # Shape is (timepoints x parcels)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    dict_keys(['BOLD', 'VBM_GM'])
    (1, 100)
    dict_keys(['BOLD', 'VBM_GM'])
    (96, 100)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 1 minutes  30.816 seconds)


.. _sphx_glr_download_auto_examples_run_compute_parcel_mean.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_compute_parcel_mean.py <run_compute_parcel_mean.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_compute_parcel_mean.ipynb <run_compute_parcel_mean.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
