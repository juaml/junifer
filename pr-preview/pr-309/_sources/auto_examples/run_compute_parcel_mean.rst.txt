
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_compute_parcel_mean.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_run_compute_parcel_mean.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_compute_parcel_mean.py:


Computer Parcel Aggregation.
============================

This example uses the ``ParcelAggregation`` marker to compute the mean of each
parcel using the Schaefer parcellations (100 rois, 7 Yeo networks) for both 3D
and 4D NIfTI.

Authors: Federico Raimondo, Synchon Mandal

License: BSD 3 clause

.. GENERATED FROM PYTHON SOURCE LINES 13-23

.. code-block:: default


    from junifer.testing.datagrabbers import (
        OasisVBMTestingDataGrabber,
        SPMAuditoryTestingDataGrabber,
    )
    from junifer.datareader import DefaultDataReader
    from junifer.markers import ParcelAggregation
    from junifer.utils import configure_logging









.. GENERATED FROM PYTHON SOURCE LINES 24-25

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 25-27

.. code-block:: default

    configure_logging(level="INFO")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-03-07 10:44:30,370 - JUNIFER - INFO - ===== Lib Versions =====
    2024-03-07 10:44:30,370 - JUNIFER - INFO - numpy: 1.26.4
    2024-03-07 10:44:30,370 - JUNIFER - INFO - scipy: 1.11.4
    2024-03-07 10:44:30,370 - JUNIFER - INFO - pandas: 2.1.4
    2024-03-07 10:44:30,370 - JUNIFER - INFO - nilearn: 0.10.2
    2024-03-07 10:44:30,370 - JUNIFER - INFO - nibabel: 5.2.1
    2024-03-07 10:44:30,370 - JUNIFER - INFO - junifer: 0.0.4.dev619
    2024-03-07 10:44:30,370 - JUNIFER - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 28-29

Perform parcel aggregation on VBM GM data (3D) from OASIS dataset

.. GENERATED FROM PYTHON SOURCE LINES 29-42

.. code-block:: default

    with OasisVBMTestingDataGrabber() as dg:
        # Get the first element
        element = dg.get_elements()[0]
        # Read the element
        element_data = DefaultDataReader().fit_transform(dg[element])
        # Initialize marker
        marker = ParcelAggregation(parcellation="Schaefer100x7", method="mean")
        # Compute feature
        feature = marker.fit_transform(element_data)
        # Print the output
        print(feature.keys())
        print(feature["VBM_GM"]["data"].shape)  # Shape is (1 x parcels)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /opt/hostedtoolcache/Python/3.10.13/x64/lib/python3.10/site-packages/nilearn/datasets/struct.py:852: UserWarning: `legacy_format` will default to `False` in release 0.11. Dataset fetchers will then return pandas dataframes by default instead of recarrays.
      warnings.warn(_LEGACY_FORMAT_MSG)
    2024-03-07 10:44:30,376 - JUNIFER - INFO - Getting element sub-01
    2024-03-07 10:44:30,376 - JUNIFER - INFO - Reading VBM_GM from /home/runner/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    2024-03-07 10:44:30,376 - JUNIFER - INFO - VBM_GM is type NIFTI
    2024-03-07 10:44:30,377 - JUNIFER - INFO - Computing VBM_GM
    2024-03-07 10:44:30,377 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2024-03-07 10:44:30,378 - JUNIFER - INFO - Parcellation parameters:
    2024-03-07 10:44:30,378 - JUNIFER - INFO -      resolution: 2.0
    2024-03-07 10:44:30,378 - JUNIFER - INFO -      n_rois: 100
    2024-03-07 10:44:30,378 - JUNIFER - INFO -      yeo_networks: 7
    2024-03-07 10:44:30,378 - JUNIFER - INFO - At least one of the parcellation files are missing. Fetching using nilearn.
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order.txt ...
     ...done. (0 seconds, 0 min)
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz ...
     ...done. (0 seconds, 0 min)
    2024-03-07 10:44:30,532 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2024-03-07 10:44:31,229 - JUNIFER - INFO - No storage specified, returning dictionary
    dict_keys(['VBM_GM'])
    (1, 100)




.. GENERATED FROM PYTHON SOURCE LINES 43-44

Perform parcel aggregation on BOLD data (4D) from SPM Auditory dataset

.. GENERATED FROM PYTHON SOURCE LINES 44-58

.. code-block:: default

    with SPMAuditoryTestingDataGrabber() as dg:
        # Get the first element
        element = dg.get_elements()[0]
        # Read the element
        element_data = DefaultDataReader().fit_transform(dg[element])
        # Initialize marker
        marker = ParcelAggregation(
            parcellation="Schaefer100x7", method="mean", on="BOLD"
        )
        # Compute feature
        feature = marker.fit_transform(element_data)
        # Print the output
        print(feature.keys())
        print(feature["BOLD"]["data"].shape)  # Shape is (timepoints x parcels)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-03-07 10:44:31,230 - JUNIFER - INFO - Getting element sub001

    Dataset created in /home/runner/nilearn_data/spm_auditory

    Data absent, downloading...
    Downloading data from https://www.fil.ion.ucl.ac.uk/spm/download/data/MoAEpilot/MoAEpilot.zip ...
    Downloaded 3506176 of 34212021 bytes (10.2%,    8.9s remaining)    Downloaded 6987776 of 34212021 bytes (20.4%,    8.0s remaining)    Downloaded 8994816 of 34212021 bytes (26.3%,    8.6s remaining)    Downloaded 10387456 of 34212021 bytes (30.4%,    9.4s remaining)    Downloaded 11272192 of 34212021 bytes (32.9%,   10.4s remaining)    Downloaded 11862016 of 34212021 bytes (34.7%,   11.5s remaining)    Downloaded 12427264 of 34212021 bytes (36.3%,   12.5s remaining)    Downloaded 13041664 of 34212021 bytes (38.1%,   13.2s remaining)    Downloaded 13737984 of 34212021 bytes (40.2%,   13.7s remaining)    Downloaded 14491648 of 34212021 bytes (42.4%,   13.9s remaining)    Downloaded 15220736 of 34212021 bytes (44.5%,   14.0s remaining)    Downloaded 15958016 of 34212021 bytes (46.6%,   14.0s remaining)    Downloaded 16654336 of 34212021 bytes (48.7%,   14.0s remaining)    Downloaded 17309696 of 34212021 bytes (50.6%,   13.9s remaining)    Downloaded 18014208 of 34212021 bytes (52.7%,   13.7s remaining)    Downloaded 18628608 of 34212021 bytes (54.5%,   13.6s remaining)    Downloaded 19292160 of 34212021 bytes (56.4%,   13.4s remaining)    Downloaded 20037632 of 34212021 bytes (58.6%,   12.9s remaining)    Downloaded 20774912 of 34212021 bytes (60.7%,   12.5s remaining)    Downloaded 21422080 of 34212021 bytes (62.6%,   12.2s remaining)    Downloaded 22159360 of 34212021 bytes (64.8%,   11.6s remaining)    Downloaded 22929408 of 34212021 bytes (67.0%,   11.0s remaining)    Downloaded 23724032 of 34212021 bytes (69.3%,   10.3s remaining)    Downloaded 24584192 of 34212021 bytes (71.9%,    9.6s remaining)    Downloaded 25534464 of 34212021 bytes (74.6%,    8.6s remaining)    Downloaded 26558464 of 34212021 bytes (77.6%,    7.6s remaining)    Downloaded 27394048 of 34212021 bytes (80.1%,    6.8s remaining)    Downloaded 28368896 of 34212021 bytes (82.9%,    5.9s remaining)    Downloaded 29163520 of 34212021 bytes (85.2%,    5.1s remaining)    Downloaded 29933568 of 34212021 bytes (87.5%,    4.4s remaining)    Downloaded 30605312 of 34212021 bytes (89.5%,    3.7s remaining)    Downloaded 31334400 of 34212021 bytes (91.6%,    3.0s remaining)    Downloaded 32120832 of 34212021 bytes (93.9%,    2.2s remaining)    Downloaded 32989184 of 34212021 bytes (96.4%,    1.3s remaining)    Downloaded 33923072 of 34212021 bytes (99.2%,    0.3s remaining) ...done. (37 seconds, 0 min)
    Extracting data from /home/runner/nilearn_data/spm_auditory/sub001/MoAEpilot.zip..... done.
    2024-03-07 10:45:11,608 - JUNIFER - INFO - Reading BOLD from /tmp/tmp_50z5vc0/sub001_bold.nii.gz
    2024-03-07 10:45:11,608 - JUNIFER - INFO - BOLD is type NIFTI
    2024-03-07 10:45:11,610 - JUNIFER - INFO - Reading T1w from /tmp/tmp_50z5vc0/sub001_T1w.nii.gz
    2024-03-07 10:45:11,610 - JUNIFER - INFO - T1w is type NIFTI
    2024-03-07 10:45:11,610 - JUNIFER - INFO - Computing BOLD
    2024-03-07 10:45:11,611 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2024-03-07 10:45:11,611 - JUNIFER - INFO - Parcellation parameters:
    2024-03-07 10:45:11,611 - JUNIFER - INFO -      resolution: 3.0
    2024-03-07 10:45:11,611 - JUNIFER - INFO -      n_rois: 100
    2024-03-07 10:45:11,611 - JUNIFER - INFO -      yeo_networks: 7
    2024-03-07 10:45:11,612 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2024-03-07 10:45:14,136 - JUNIFER - INFO - No storage specified, returning dictionary
    dict_keys(['BOLD'])
    (96, 100)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 43.772 seconds)


.. _sphx_glr_download_auto_examples_run_compute_parcel_mean.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_compute_parcel_mean.py <run_compute_parcel_mean.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_compute_parcel_mean.ipynb <run_compute_parcel_mean.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
