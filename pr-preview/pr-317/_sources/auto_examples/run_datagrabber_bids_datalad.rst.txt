
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_datagrabber_bids_datalad.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_run_datagrabber_bids_datalad.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_datagrabber_bids_datalad.py:


Generic BIDS DataGrabber for datalad.
=====================================

This example uses a generic BIDS DataGraber to get the data from a BIDS dataset
store in a datalad remote sibling.

Authors: Federico Raimondo

License: BSD 3 clause

.. GENERATED FROM PYTHON SOURCE LINES 12-17

.. code-block:: default


    from junifer.datagrabber import PatternDataladDataGrabber
    from junifer.utils import configure_logging









.. GENERATED FROM PYTHON SOURCE LINES 18-19

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 19-22

.. code-block:: default

    configure_logging(level="INFO")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-04-02 07:44:18,283 - JUNIFER - INFO - ===== Lib Versions =====
    2024-04-02 07:44:18,284 - JUNIFER - INFO - numpy: 1.26.4
    2024-04-02 07:44:18,284 - JUNIFER - INFO - scipy: 1.11.4
    2024-04-02 07:44:18,284 - JUNIFER - INFO - pandas: 2.1.4
    2024-04-02 07:44:18,284 - JUNIFER - INFO - nilearn: 0.10.2
    2024-04-02 07:44:18,284 - JUNIFER - INFO - nibabel: 5.2.1
    2024-04-02 07:44:18,284 - JUNIFER - INFO - junifer: 0.0.4.dev733
    2024-04-02 07:44:18,284 - JUNIFER - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 23-26

The BIDS DataGrabber requires three parameters: the types of data we want,
the specific pattern that matches each type, and the variables that will be
replaced in the patterns.

.. GENERATED FROM PYTHON SOURCE LINES 26-32

.. code-block:: default

    types = ["T1w", "BOLD"]
    patterns = {
        "T1w": "{subject}/anat/{subject}_T1w.nii.gz",
        "BOLD": "{subject}/func/{subject}_task-rest_bold.nii.gz",
    }
    replacements = ["subject"]







.. GENERATED FROM PYTHON SOURCE LINES 33-35

Additionally, a datalad-based DataGrabber requires the URI of the remote
sibling and the location of the dataset within the remote sibling.

.. GENERATED FROM PYTHON SOURCE LINES 35-38

.. code-block:: default

    repo_uri = "https://gin.g-node.org/juaml/datalad-example-bids"
    rootdir = "example_bids"








.. GENERATED FROM PYTHON SOURCE LINES 39-42

Now we can use the DataGrabber within a `with` context.
One thing we can do with any DataGrabber is iterate over the elements.
In this case, each element of the DataGrabber is one session.

.. GENERATED FROM PYTHON SOURCE LINES 42-52

.. code-block:: default

    with PatternDataladDataGrabber(
        rootdir=rootdir,
        types=types,
        patterns=patterns,
        uri=repo_uri,
        replacements=replacements,
    ) as dg:
        for elem in dg:
            print(elem)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-04-02 07:44:18,284 - JUNIFER - INFO - `datadir` is None, creating a temporary directory
    2024-04-02 07:44:18,285 - JUNIFER - INFO - `datadir` set to /tmp/tmpfouadbfy/datadir
    sub-06
    sub-07
    sub-04
    sub-05
    sub-01
    sub-02
    sub-03
    sub-09
    sub-08




.. GENERATED FROM PYTHON SOURCE LINES 53-56

Another feature of the DataGrabber is the ability to get a specific
element by its name. In this case, we index `sub-01` and we get the file
paths for the two types of data we want (T1w and BOLD).

.. GENERATED FROM PYTHON SOURCE LINES 56-65

.. code-block:: default

    with PatternDataladDataGrabber(
        rootdir=rootdir,
        types=types,
        patterns=patterns,
        uri=repo_uri,
        replacements=replacements,
    ) as dg:
        sub01 = dg["sub-01"]
        print(sub01)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-04-02 07:44:23,139 - JUNIFER - INFO - `datadir` is None, creating a temporary directory
    2024-04-02 07:44:23,139 - JUNIFER - INFO - `datadir` set to /tmp/tmpq0iwi_4f/datadir
    2024-04-02 07:44:25,277 - JUNIFER - INFO - Getting element sub-01
    {'T1w': {'path': PosixPath('/tmp/tmpq0iwi_4f/datadir/example_bids/sub-01/anat/sub-01_T1w.nii.gz'), 'meta': {'datagrabber': {'class': 'PatternDataladDataGrabber', 'patterns': {'T1w': '{subject}/anat/{subject}_T1w.nii.gz', 'BOLD': '{subject}/func/{subject}_task-rest_bold.nii.gz'}, 'replacements': ['subject'], 'confounds_format': None, 'types': ['T1w', 'BOLD'], 'uri': 'https://gin.g-node.org/juaml/datalad-example-bids', 'datalad_dirty': False, 'datalad_commit_id': '522dfb203afcd2cd55799bf347f9b211919a7338', 'datalad_id': 'fec92475-d9c0-4409-92ba-f041b6a12c40'}, 'dependencies': set(), 'element': {'subject': 'sub-01'}}}, 'BOLD': {'path': PosixPath('/tmp/tmpq0iwi_4f/datadir/example_bids/sub-01/func/sub-01_task-rest_bold.nii.gz'), 'meta': {'datagrabber': {'class': 'PatternDataladDataGrabber', 'patterns': {'T1w': '{subject}/anat/{subject}_T1w.nii.gz', 'BOLD': '{subject}/func/{subject}_task-rest_bold.nii.gz'}, 'replacements': ['subject'], 'confounds_format': None, 'types': ['T1w', 'BOLD'], 'uri': 'https://gin.g-node.org/juaml/datalad-example-bids', 'datalad_dirty': False, 'datalad_commit_id': '522dfb203afcd2cd55799bf347f9b211919a7338', 'datalad_id': 'fec92475-d9c0-4409-92ba-f041b6a12c40'}, 'dependencies': set(), 'element': {'subject': 'sub-01'}}}}





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 8.043 seconds)


.. _sphx_glr_download_auto_examples_run_datagrabber_bids_datalad.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example




    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_datagrabber_bids_datalad.py <run_datagrabber_bids_datalad.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_datagrabber_bids_datalad.ipynb <run_datagrabber_bids_datalad.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
