
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_compute_parcel_mean.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_run_compute_parcel_mean.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_compute_parcel_mean.py:


Computer Parcel Aggregation.
============================

This example uses the ``ParcelAggregation`` marker to compute the mean of each
parcel using the Schaefer parcellations (100 rois, 7 Yeo networks) for both 3D
and 4D NIfTI.

Authors: Federico Raimondo, Synchon Mandal

License: BSD 3 clause

.. GENERATED FROM PYTHON SOURCE LINES 13-23

.. code-block:: Python


    from junifer.testing.datagrabbers import (
        OasisVBMTestingDataGrabber,
        SPMAuditoryTestingDataGrabber,
    )
    from junifer.datareader import DefaultDataReader
    from junifer.markers import ParcelAggregation
    from junifer.utils import configure_logging









.. GENERATED FROM PYTHON SOURCE LINES 24-25

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 25-27

.. code-block:: Python

    configure_logging(level="INFO")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /__w/junifer/junifer/junifer/utils/logging.py:193: UserWarning: The '__version__' attribute is deprecated and will be removed in MarkupSafe 3.1. Use feature detection, or `importlib.metadata.version("markupsafe")`, instead.
      vstring = str(getattr(module, "__version__", None))
    2024-12-06 14:39:41,789 - JUNIFER - INFO - ===== Lib Versions =====
    2024-12-06 14:39:41,789 - JUNIFER - INFO - numpy: 1.26.4
    2024-12-06 14:39:41,789 - JUNIFER - INFO - scipy: 1.14.1
    2024-12-06 14:39:41,789 - JUNIFER - INFO - pandas: 2.1.4
    2024-12-06 14:39:41,789 - JUNIFER - INFO - nilearn: 0.10.4
    2024-12-06 14:39:41,789 - JUNIFER - INFO - nibabel: 5.3.2
    2024-12-06 14:39:41,789 - JUNIFER - INFO - junifer: 0.0.6.dev370
    2024-12-06 14:39:41,789 - JUNIFER - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 28-29

Perform parcel aggregation on VBM GM data (3D) from OASIS dataset

.. GENERATED FROM PYTHON SOURCE LINES 29-42

.. code-block:: Python

    with OasisVBMTestingDataGrabber() as dg:
        # Get the first element
        element = dg.get_elements()[0]
        # Read the element
        element_data = DefaultDataReader().fit_transform(dg[element])
        # Initialize marker
        marker = ParcelAggregation(parcellation="Schaefer100x7", method="mean")
        # Compute feature
        feature = marker.fit_transform(element_data)
        # Print the output
        print(feature.keys())
        print(feature["VBM_GM"]["aggregation"]["data"].shape)  # Shape is (1 x parcels)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-12-06 14:39:41,794 - JUNIFER - INFO - Getting element sub-01
    2024-12-06 14:39:41,795 - JUNIFER - INFO - Reading VBM_GM from /github/home/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    2024-12-06 14:39:41,795 - JUNIFER - INFO - VBM_GM is of type NIFTI
    2024-12-06 14:39:41,795 - JUNIFER - INFO - Computing VBM_GM
    2024-12-06 14:39:41,796 - JUNIFER - INFO - Parcellation will be warped from MNI152NLin6Asym to MNI152Lin using highest resolution
    2024-12-06 14:39:41,796 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2024-12-06 14:39:41,796 - JUNIFER - INFO - Parcellation parameters:
    2024-12-06 14:39:41,796 - JUNIFER - INFO -      resolution: None
    2024-12-06 14:39:41,796 - JUNIFER - INFO -      n_rois: 100
    2024-12-06 14:39:41,796 - JUNIFER - INFO -      yeo_networks: 7
    2024-12-06 14:39:41,796 - JUNIFER - INFO - Resolution set to None, using highest resolution.
    2024-12-06 14:39:41,796 - JUNIFER - INFO - At least one of the parcellation files are missing. Fetching using nilearn.
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order.txt ...
     ...done. (0 seconds, 0 min)
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_1mm.nii.gz ...
     ...done. (0 seconds, 0 min)
    2024-12-06 14:39:41,815 - JUNIFER - INFO - Loading parcellation: /github/home/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_1mm.nii.gz
    2024-12-06 14:39:42,084 - JUNIFER - INFO - Found existing xfm file for MNI152NLin6Asym to MNI152Lin at /github/home/junifer/data/xfms/.git/annex/objects/80/1W/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5
    2024-12-06 14:39:43,207 - JUNIFER - INFO - Downloading template MNI152Lin (T1w in resolution 1
    2024-12-06 14:39:43,712 - JUNIFER - INFO - antsApplyTransforms command to be executed:
    antsApplyTransforms -d 3 -e 3 -n 'GenericLabel[NearestNeighbor]' -i /tmp/junifer/tmpdop8kt5i/ants_parcellation_warper_Schaefer100x7_from_MNI152NLin6Asym_to_MNI152Lin_edce4b3c-b3df-11ef-a9ef-0242ac1200021kn73aax/prewarp_parcellation.nii.gz -r /tmp/junifer/tmpdop8kt5i/ants_parcellation_warper_Schaefer100x7_from_MNI152NLin6Asym_to_MNI152Lin_edce4b3c-b3df-11ef-a9ef-0242ac1200021kn73aax/MNI152Lin_T1w.nii.gz -t /github/home/junifer/data/xfms/.git/annex/objects/80/1W/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5 -o /tmp/junifer/tmpdop8kt5i/ants_parcellation_warper_Schaefer100x7_from_MNI152NLin6Asym_to_MNI152Lin_edce4b3c-b3df-11ef-a9ef-0242ac1200021kn73aax/parcellation_warped.nii.gz
    2024-12-06 14:39:52,721 - JUNIFER - INFO - antsApplyTransforms command succeeded with the following output:

    2024-12-06 14:39:54,073 - JUNIFER - INFO - No storage specified, returning dictionary
    dict_keys(['VBM_GM'])
    (1, 100)




.. GENERATED FROM PYTHON SOURCE LINES 43-44

Perform parcel aggregation on BOLD data (4D) from SPM Auditory dataset

.. GENERATED FROM PYTHON SOURCE LINES 44-58

.. code-block:: Python

    with SPMAuditoryTestingDataGrabber() as dg:
        # Get the first element
        element = dg.get_elements()[0]
        # Read the element
        element_data = DefaultDataReader().fit_transform(dg[element])
        # Initialize marker
        marker = ParcelAggregation(
            parcellation="Schaefer100x7", method="mean", on="BOLD"
        )
        # Compute feature
        feature = marker.fit_transform(element_data)
        # Print the output
        print(feature.keys())
        print(feature["BOLD"]["aggregation"]["data"].shape)  # Shape is (timepoints x parcels)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-12-06 14:39:54,074 - JUNIFER - INFO - Getting element sub001

    Dataset created in /github/home/nilearn_data/spm_auditory

    Data absent, downloading...
    Downloading data from https://www.fil.ion.ucl.ac.uk/spm/download/data/MoAEpilot/MoAEpilot.zip ...
    Downloaded 1499136 of 34212021 bytes (4.4%,   22.3s remaining)    Downloaded 5537792 of 34212021 bytes (16.2%,   10.6s remaining)    Downloaded 8069120 of 34212021 bytes (23.6%,   10.0s remaining)    Downloaded 9756672 of 34212021 bytes (28.5%,   10.3s remaining)    Downloaded 11264000 of 34212021 bytes (32.9%,   10.4s remaining)    Downloaded 12566528 of 34212021 bytes (36.7%,   10.6s remaining)    Downloaded 13688832 of 34212021 bytes (40.0%,   10.8s remaining)    Downloaded 14778368 of 34212021 bytes (43.2%,   10.8s remaining)    Downloaded 15933440 of 34212021 bytes (46.6%,   10.6s remaining)    Downloaded 17088512 of 34212021 bytes (49.9%,   10.3s remaining)    Downloaded 18251776 of 34212021 bytes (53.3%,    9.8s remaining)    Downloaded 19423232 of 34212021 bytes (56.8%,    9.4s remaining)    Downloaded 20627456 of 34212021 bytes (60.3%,    8.8s remaining)    Downloaded 21913600 of 34212021 bytes (64.1%,    8.0s remaining)    Downloaded 23347200 of 34212021 bytes (68.2%,    7.1s remaining)    Downloaded 25018368 of 34212021 bytes (73.1%,    6.0s remaining)    Downloaded 27033600 of 34212021 bytes (79.0%,    4.6s remaining)    Downloaded 29540352 of 34212021 bytes (86.3%,    2.9s remaining)    Downloaded 32686080 of 34212021 bytes (95.5%,    0.9s remaining) ...done. (21 seconds, 0 min)
    Extracting data from /github/home/nilearn_data/spm_auditory/sub001/MoAEpilot.zip..... done.
    2024-12-06 14:40:18,383 - JUNIFER - INFO - Reading BOLD from /tmp/tmprldx3xho/sub001_bold.nii.gz
    2024-12-06 14:40:18,383 - JUNIFER - INFO - BOLD is of type NIFTI
    2024-12-06 14:40:18,384 - JUNIFER - INFO - Reading T1w from /tmp/tmprldx3xho/sub001_T1w.nii.gz
    2024-12-06 14:40:18,384 - JUNIFER - INFO - T1w is of type NIFTI
    2024-12-06 14:40:18,385 - JUNIFER - INFO - Computing BOLD
    2024-12-06 14:40:18,385 - JUNIFER - INFO - Parcellation will be warped from MNI152NLin6Asym to MNI152Lin using highest resolution
    2024-12-06 14:40:18,386 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2024-12-06 14:40:18,386 - JUNIFER - INFO - Parcellation parameters:
    2024-12-06 14:40:18,386 - JUNIFER - INFO -      resolution: None
    2024-12-06 14:40:18,386 - JUNIFER - INFO -      n_rois: 100
    2024-12-06 14:40:18,386 - JUNIFER - INFO -      yeo_networks: 7
    2024-12-06 14:40:18,386 - JUNIFER - INFO - Resolution set to None, using highest resolution.
    2024-12-06 14:40:18,387 - JUNIFER - INFO - Loading parcellation: /github/home/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_1mm.nii.gz
    2024-12-06 14:40:18,655 - JUNIFER - INFO - Found existing xfm file for MNI152NLin6Asym to MNI152Lin at /github/home/junifer/data/xfms/.git/annex/objects/80/1W/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5
    2024-12-06 14:40:19,763 - JUNIFER - INFO - Downloading template MNI152Lin (T1w in resolution 1
    2024-12-06 14:40:20,265 - JUNIFER - INFO - antsApplyTransforms command to be executed:
    antsApplyTransforms -d 3 -e 3 -n 'GenericLabel[NearestNeighbor]' -i /tmp/junifer/tmpdop8kt5i/ants_parcellation_warper_Schaefer100x7_from_MNI152NLin6Asym_to_MNI152Lin_039abcac-b3e0-11ef-a9ef-0242ac120002lbx7f17s/prewarp_parcellation.nii.gz -r /tmp/junifer/tmpdop8kt5i/ants_parcellation_warper_Schaefer100x7_from_MNI152NLin6Asym_to_MNI152Lin_039abcac-b3e0-11ef-a9ef-0242ac120002lbx7f17s/MNI152Lin_T1w.nii.gz -t /github/home/junifer/data/xfms/.git/annex/objects/80/1W/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5 -o /tmp/junifer/tmpdop8kt5i/ants_parcellation_warper_Schaefer100x7_from_MNI152NLin6Asym_to_MNI152Lin_039abcac-b3e0-11ef-a9ef-0242ac120002lbx7f17s/parcellation_warped.nii.gz
    2024-12-06 14:40:29,246 - JUNIFER - INFO - antsApplyTransforms command succeeded with the following output:

    2024-12-06 14:40:32,224 - JUNIFER - INFO - No storage specified, returning dictionary
    dict_keys(['BOLD'])
    (96, 100)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 50.440 seconds)


.. _sphx_glr_download_auto_examples_run_compute_parcel_mean.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_compute_parcel_mean.ipynb <run_compute_parcel_mean.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_compute_parcel_mean.py <run_compute_parcel_mean.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: run_compute_parcel_mean.zip <run_compute_parcel_mean.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
