
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_compute_parcel_mean.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        :ref:`Go to the end <sphx_glr_download_auto_examples_run_compute_parcel_mean.py>`
        to download the full example code.

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_compute_parcel_mean.py:


Computer Parcel Aggregation.
============================

This example uses the ``ParcelAggregation`` marker to compute the mean of each
parcel using the Schaefer parcellations (100 rois, 7 Yeo networks) for both 3D
and 4D NIfTI.

Authors: Federico Raimondo, Synchon Mandal

License: BSD 3 clause

.. GENERATED FROM PYTHON SOURCE LINES 13-23

.. code-block:: Python


    from junifer.testing.datagrabbers import (
        OasisVBMTestingDataGrabber,
        SPMAuditoryTestingDataGrabber,
    )
    from junifer.datareader import DefaultDataReader
    from junifer.markers import ParcelAggregation
    from junifer.utils import configure_logging









.. GENERATED FROM PYTHON SOURCE LINES 24-25

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 25-27

.. code-block:: Python

    configure_logging(level="INFO")





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    /__w/junifer/junifer/junifer/utils/logging.py:139: UserWarning: The '__version__' attribute is deprecated and will be removed in MarkupSafe 3.1. Use feature detection, or `importlib.metadata.version("markupsafe")`, instead.
      vstring = str(getattr(module, "__version__", None))
    2024-10-16 13:09:18,517 - JUNIFER - INFO - ===== Lib Versions =====
    2024-10-16 13:09:18,517 - JUNIFER - INFO - numpy: 1.26.4
    2024-10-16 13:09:18,517 - JUNIFER - INFO - scipy: 1.14.1
    2024-10-16 13:09:18,517 - JUNIFER - INFO - pandas: 2.1.4
    2024-10-16 13:09:18,517 - JUNIFER - INFO - nilearn: 0.10.4
    2024-10-16 13:09:18,517 - JUNIFER - INFO - nibabel: 5.3.1
    2024-10-16 13:09:18,517 - JUNIFER - INFO - junifer: 0.0.6.dev145
    2024-10-16 13:09:18,517 - JUNIFER - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 28-29

Perform parcel aggregation on VBM GM data (3D) from OASIS dataset

.. GENERATED FROM PYTHON SOURCE LINES 29-42

.. code-block:: Python

    with OasisVBMTestingDataGrabber() as dg:
        # Get the first element
        element = dg.get_elements()[0]
        # Read the element
        element_data = DefaultDataReader().fit_transform(dg[element])
        # Initialize marker
        marker = ParcelAggregation(parcellation="Schaefer100x7", method="mean")
        # Compute feature
        feature = marker.fit_transform(element_data)
        # Print the output
        print(feature.keys())
        print(feature["VBM_GM"]["aggregation"]["data"].shape)  # Shape is (1 x parcels)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-10-16 13:09:18,523 - JUNIFER - INFO - Getting element sub-01
    2024-10-16 13:09:18,523 - JUNIFER - INFO - Reading VBM_GM from /github/home/nilearn_data/oasis1/OAS1_0001_MR1/mwrc1OAS1_0001_MR1_mpr_anon_fslswapdim_bet.nii.gz
    2024-10-16 13:09:18,523 - JUNIFER - INFO - VBM_GM is of type NIFTI
    2024-10-16 13:09:18,524 - JUNIFER - INFO - Computing VBM_GM
    2024-10-16 13:09:18,525 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2024-10-16 13:09:18,525 - JUNIFER - INFO - Parcellation parameters:
    2024-10-16 13:09:18,525 - JUNIFER - INFO -      resolution: 2.0
    2024-10-16 13:09:18,525 - JUNIFER - INFO -      n_rois: 100
    2024-10-16 13:09:18,525 - JUNIFER - INFO -      yeo_networks: 7
    2024-10-16 13:09:18,526 - JUNIFER - INFO - At least one of the parcellation files are missing. Fetching using nilearn.
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order.txt ...
     ...done. (0 seconds, 0 min)
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz ...
     ...done. (0 seconds, 0 min)
    2024-10-16 13:09:18,565 - JUNIFER - INFO - Loading parcellation /github/home/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2024-10-16 13:09:18,618 - JUNIFER - INFO - Found existing xfm file for MNI152NLin6Asym to MNI152Lin at /github/home/junifer/data/xfms/.git/annex/objects/80/1W/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5
    2024-10-16 13:09:19,788 - JUNIFER - INFO - Downloading template MNI152Lin in resolution 2
    2024-10-16 13:09:19,868 - JUNIFER - INFO - antsApplyTransforms command to be executed:
    antsApplyTransforms -d 3 -e 3 -n 'GenericLabel[NearestNeighbor]' -i /tmp/tmpg_ci5wuq/parcellationsg6oav3w4/Schaefer100x7.nii.gz -r /tmp/tmpg_ci5wuq/parcellationsg6oav3w4/MNI152Lin_T1w_2.0.nii.gz -t /github/home/junifer/data/xfms/.git/annex/objects/80/1W/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5 -o /tmp/tmp4vszcpt5/parcellationswr3i9t_y/Schaefer100x7_warped_from_MNI152NLin6Asym_to_MNI152Lin.nii.gz
    2024-10-16 13:09:21,651 - JUNIFER - INFO - antsApplyTransforms command succeeded with the following output:

    2024-10-16 13:09:22,678 - JUNIFER - INFO - No storage specified, returning dictionary
    dict_keys(['VBM_GM'])
    (1, 100)




.. GENERATED FROM PYTHON SOURCE LINES 43-44

Perform parcel aggregation on BOLD data (4D) from SPM Auditory dataset

.. GENERATED FROM PYTHON SOURCE LINES 44-58

.. code-block:: Python

    with SPMAuditoryTestingDataGrabber() as dg:
        # Get the first element
        element = dg.get_elements()[0]
        # Read the element
        element_data = DefaultDataReader().fit_transform(dg[element])
        # Initialize marker
        marker = ParcelAggregation(
            parcellation="Schaefer100x7", method="mean", on="BOLD"
        )
        # Compute feature
        feature = marker.fit_transform(element_data)
        # Print the output
        print(feature.keys())
        print(feature["BOLD"]["aggregation"]["data"].shape)  # Shape is (timepoints x parcels)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2024-10-16 13:09:22,679 - JUNIFER - INFO - Getting element sub001

    Dataset created in /github/home/nilearn_data/spm_auditory

    Data absent, downloading...
    Downloading data from https://www.fil.ion.ucl.ac.uk/spm/download/data/MoAEpilot/MoAEpilot.zip ...
    Downloaded 4612096 of 34212021 bytes (13.5%,    6.6s remaining)    Downloaded 9551872 of 34212021 bytes (27.9%,    5.3s remaining)    Downloaded 13492224 of 34212021 bytes (39.4%,    4.7s remaining)    Downloaded 17661952 of 34212021 bytes (51.6%,    3.8s remaining)    Downloaded 22044672 of 34212021 bytes (64.4%,    2.8s remaining)    Downloaded 26533888 of 34212021 bytes (77.6%,    1.8s remaining)    Downloaded 31031296 of 34212021 bytes (90.7%,    0.7s remaining) ...done. (9 seconds, 0 min)
    Extracting data from /github/home/nilearn_data/spm_auditory/sub001/MoAEpilot.zip..... done.
    2024-10-16 13:09:34,540 - JUNIFER - INFO - Reading BOLD from /tmp/tmprqhp93zo/sub001_bold.nii.gz
    2024-10-16 13:09:34,541 - JUNIFER - INFO - BOLD is of type NIFTI
    2024-10-16 13:09:34,542 - JUNIFER - INFO - Reading T1w from /tmp/tmprqhp93zo/sub001_T1w.nii.gz
    2024-10-16 13:09:34,542 - JUNIFER - INFO - T1w is of type NIFTI
    2024-10-16 13:09:34,543 - JUNIFER - INFO - Computing BOLD
    2024-10-16 13:09:34,544 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2024-10-16 13:09:34,544 - JUNIFER - INFO - Parcellation parameters:
    2024-10-16 13:09:34,544 - JUNIFER - INFO -      resolution: 3.0
    2024-10-16 13:09:34,544 - JUNIFER - INFO -      n_rois: 100
    2024-10-16 13:09:34,544 - JUNIFER - INFO -      yeo_networks: 7
    2024-10-16 13:09:34,546 - JUNIFER - INFO - Loading parcellation /github/home/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2024-10-16 13:09:34,599 - JUNIFER - INFO - Found existing xfm file for MNI152NLin6Asym to MNI152Lin at /github/home/junifer/data/xfms/.git/annex/objects/80/1W/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5
    2024-10-16 13:09:35,748 - JUNIFER - INFO - Downloading template MNI152Lin in resolution 2
    2024-10-16 13:09:35,829 - JUNIFER - INFO - antsApplyTransforms command to be executed:
    antsApplyTransforms -d 3 -e 3 -n 'GenericLabel[NearestNeighbor]' -i /tmp/tmpg_ci5wuq/parcellationska3syt8j/Schaefer100x7.nii.gz -r /tmp/tmpg_ci5wuq/parcellationska3syt8j/MNI152Lin_T1w_3.0.nii.gz -t /github/home/junifer/data/xfms/.git/annex/objects/80/1W/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5/SHA256E-s151956315--b80fd5f087580ecbbb212d1ece24c12f1ce448ca4912c1ea739eb8e84b6f418a.h5 -o /tmp/tmp4vszcpt5/parcellationsjnnvzpze/Schaefer100x7_warped_from_MNI152NLin6Asym_to_MNI152Lin.nii.gz
    2024-10-16 13:09:37,609 - JUNIFER - INFO - antsApplyTransforms command succeeded with the following output:

    2024-10-16 13:09:40,277 - JUNIFER - INFO - No storage specified, returning dictionary
    dict_keys(['BOLD'])
    (96, 100)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** (0 minutes 21.765 seconds)


.. _sphx_glr_download_auto_examples_run_compute_parcel_mean.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_compute_parcel_mean.ipynb <run_compute_parcel_mean.ipynb>`

    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_compute_parcel_mean.py <run_compute_parcel_mean.py>`

    .. container:: sphx-glr-download sphx-glr-download-zip

      :download:`Download zipped: run_compute_parcel_mean.zip <run_compute_parcel_mean.zip>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
