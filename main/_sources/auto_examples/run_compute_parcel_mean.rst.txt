
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_compute_parcel_mean.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_run_compute_parcel_mean.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_compute_parcel_mean.py:


Computer Parcel Aggregation.
============================

This example uses a ParcelAggregation marker to compute the mean of each parcel
using the Schaefer parcellations (100 rois, 7 Yeo networks) for both a 3D and
4D nifti

Authors: Federico Raimondo

License: BSD 3 clause

.. GENERATED FROM PYTHON SOURCE LINES 13-20

.. code-block:: default


    import nilearn

    from junifer.markers.parcel_aggregation import ParcelAggregation
    from junifer.utils import configure_logging









.. GENERATED FROM PYTHON SOURCE LINES 21-22

Set the logging level to info to see extra information

.. GENERATED FROM PYTHON SOURCE LINES 22-25

.. code-block:: default

    configure_logging(level="INFO")






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-01-27 15:50:09,996 - JUNIFER - INFO - ===== Lib Versions =====
    2023-01-27 15:50:09,996 - JUNIFER - INFO - numpy: 1.23.5
    2023-01-27 15:50:09,996 - JUNIFER - INFO - scipy: 1.10.0
    2023-01-27 15:50:09,997 - JUNIFER - INFO - pandas: 1.5.3
    2023-01-27 15:50:09,997 - JUNIFER - INFO - nilearn: 0.10.0
    2023-01-27 15:50:09,997 - JUNIFER - INFO - nibabel: 4.0.2
    2023-01-27 15:50:09,997 - JUNIFER - INFO - junifer: 0.0.2.dev85
    2023-01-27 15:50:09,997 - JUNIFER - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 26-28

Load the VBM GM data (3d):
- Fetch the Oasis dataset

.. GENERATED FROM PYTHON SOURCE LINES 28-32

.. code-block:: default

    oasis_dataset = nilearn.datasets.fetch_oasis_vbm(n_subjects=1)
    vbm_fname = oasis_dataset.gray_matter_maps[0]
    vbm_img = nilearn.image.load_img(vbm_fname)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Dataset created in /home/runner/nilearn_data/oasis1

    Downloading data from https://www.nitrc.org/frs/download.php/6364/archive_dartel.tgz ...
    Downloaded 35454976 of 905208634 bytes (3.9%,   24.6s remaining)    Downloaded 91660288 of 905208634 bytes (10.1%,   17.9s remaining)    Downloaded 145448960 of 905208634 bytes (16.1%,   15.7s remaining)    Downloaded 201048064 of 905208634 bytes (22.2%,   14.1s remaining)    Downloaded 256344064 of 905208634 bytes (28.3%,   12.7s remaining)    Downloaded 311853056 of 905208634 bytes (34.5%,   11.5s remaining)    Downloaded 370393088 of 905208634 bytes (40.9%,   10.2s remaining)    Downloaded 428294144 of 905208634 bytes (47.3%,    8.9s remaining)    Downloaded 481992704 of 905208634 bytes (53.2%,    7.9s remaining)    Downloaded 535896064 of 905208634 bytes (59.2%,    6.9s remaining)    Downloaded 589938688 of 905208634 bytes (65.2%,    5.9s remaining)    Downloaded 644202496 of 905208634 bytes (71.2%,    4.9s remaining)    Downloaded 697999360 of 905208634 bytes (77.1%,    3.9s remaining)    Downloaded 752386048 of 905208634 bytes (83.1%,    2.9s remaining)    Downloaded 807452672 of 905208634 bytes (89.2%,    1.8s remaining)    Downloaded 861872128 of 905208634 bytes (95.2%,    0.8s remaining) ...done. (17 seconds, 0 min)
    Extracting data from /home/runner/nilearn_data/oasis1/6d19418bccb98b1333309bd8baa05152/archive_dartel.tgz..... done.
    /opt/hostedtoolcache/Python/3.10.9/x64/lib/python3.10/site-packages/nilearn/datasets/struct.py:733: UserWarning: `legacy_format` will default to `False` in release 0.11. Dataset fetchers will then return pandas dataframes by default instead of recarrays.
      warnings.warn(_LEGACY_FORMAT_MSG)




.. GENERATED FROM PYTHON SOURCE LINES 33-36

Load the functional data (4d):
- Fetch the SPM auditory dataset
- Concatenate the functional data into one 4D image

.. GENERATED FROM PYTHON SOURCE LINES 36-39

.. code-block:: default

    s_func_data = nilearn.datasets.fetch_spm_auditory()
    fmri_img = nilearn.image.concat_imgs(s_func_data.func)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none


    Dataset created in /home/runner/nilearn_data/spm_auditory

    Data absent, downloading...
    Downloading data from http://www.fil.ion.ucl.ac.uk/spm/download/data/MoAEpilot/MoAEpilot.zip ...
    Downloaded 1851392 of 34212021 bytes (5.4%,   17.7s remaining)    Downloaded 7823360 of 34212021 bytes (22.9%,    6.9s remaining)    Downloaded 13164544 of 34212021 bytes (38.5%,    4.9s remaining)    Downloaded 18767872 of 34212021 bytes (54.9%,    3.4s remaining)    Downloaded 24535040 of 34212021 bytes (71.7%,    2.0s remaining)    Downloaded 30375936 of 34212021 bytes (88.8%,    0.8s remaining) ...done. (8 seconds, 0 min)
    Extracting data from /home/runner/nilearn_data/spm_auditory/sub001/MoAEpilot.zip..... done.




.. GENERATED FROM PYTHON SOURCE LINES 40-41

Define the marker

.. GENERATED FROM PYTHON SOURCE LINES 41-43

.. code-block:: default

    marker = ParcelAggregation(parcellation="Schaefer100x7", method="mean")








.. GENERATED FROM PYTHON SOURCE LINES 44-45

Prepare the input

.. GENERATED FROM PYTHON SOURCE LINES 45-50

.. code-block:: default

    input = {
        "BOLD": {"data": fmri_img, "meta": {"element": "subject1"}},
        "VBM_GM": {"data": vbm_img, "meta": {"element": "subject1"}},
    }








.. GENERATED FROM PYTHON SOURCE LINES 51-52

Fit transform the data

.. GENERATED FROM PYTHON SOURCE LINES 52-54

.. code-block:: default

    out = marker.fit_transform(input)





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    2023-01-27 15:50:46,008 - JUNIFER - INFO - Computing BOLD
    2023-01-27 15:50:46,008 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2023-01-27 15:50:46,008 - JUNIFER - INFO - Parcellation parameters:
    2023-01-27 15:50:46,008 - JUNIFER - INFO -      n_rois: 100
    2023-01-27 15:50:46,008 - JUNIFER - INFO -      yeo_networks: 7
    2023-01-27 15:50:46,009 - JUNIFER - INFO -      resolution: 3.0
    2023-01-27 15:50:46,009 - JUNIFER - INFO - At least one of the parcellation files are missing. Fetching using nilearn.

    Dataset created in /home/runner/junifer/data/parcellations/schaefer_2018

    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order.txt ...
     ...done. (0 seconds, 0 min)
    Downloading data from https://raw.githubusercontent.com/ThomasYeoLab/CBIG/v0.14.3-Update_Yeo2011_Schaefer2018_labelname/stable_projects/brain_parcellation/Schaefer2018_LocalGlobal/Parcellations/MNI/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz ...
     ...done. (0 seconds, 0 min)
    2023-01-27 15:50:46,158 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2023-01-27 15:50:47,576 - JUNIFER - INFO - No storage specified, returning dictionary
    2023-01-27 15:50:47,576 - JUNIFER - INFO - Computing VBM_GM
    2023-01-27 15:50:47,577 - JUNIFER - INFO - Fetching one of Schaefer parcellations.
    2023-01-27 15:50:47,577 - JUNIFER - INFO - Parcellation parameters:
    2023-01-27 15:50:47,577 - JUNIFER - INFO -      n_rois: 100
    2023-01-27 15:50:47,577 - JUNIFER - INFO -      yeo_networks: 7
    2023-01-27 15:50:47,577 - JUNIFER - INFO -      resolution: 2.0
    2023-01-27 15:50:47,579 - JUNIFER - INFO - Loading parcellation /home/runner/junifer/data/parcellations/schaefer_2018/Schaefer2018_100Parcels_7Networks_order_FSLMNI152_2mm.nii.gz
    2023-01-27 15:50:48,230 - JUNIFER - INFO - No storage specified, returning dictionary




.. GENERATED FROM PYTHON SOURCE LINES 55-56

Check the results

.. GENERATED FROM PYTHON SOURCE LINES 56-62

.. code-block:: default


    print(out.keys())
    print(out["VBM_GM"]["data"].shape)  # Shape is (1 x parcels)

    print(out.keys())
    print(out["BOLD"]["data"].shape)  # Shape is (timepoints x parcels)




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    dict_keys(['BOLD', 'VBM_GM'])
    (1, 100)
    dict_keys(['BOLD', 'VBM_GM'])
    (96, 100)





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  38.239 seconds)


.. _sphx_glr_download_auto_examples_run_compute_parcel_mean.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: run_compute_parcel_mean.py <run_compute_parcel_mean.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: run_compute_parcel_mean.ipynb <run_compute_parcel_mean.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
