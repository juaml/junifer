
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/run_ets_rss_marker.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_run_ets_rss_marker.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_run_ets_rss_marker.py:


Extracting root sum of squares from edge-wise timeseries.
=========================================================
This example uses a RSSETSMarker to compute root sum of squares
of the edge-wise timeseries using the Schaefer atlas
(100 rois and 200 rois, 17 Yeo networks) for a 4D nifti BOLD file.

Authors: Leonard Sasse, Sami Hamdan, Nicolas Nieto, Synchon Mandal

License: BSD 3 clause

.. GENERATED FROM PYTHON SOURCE LINES 14-21

.. code-block:: default


    import tempfile

    import junifer.testing.registry  # noqa: F401
    from junifer.utils import configure_logging









.. GENERATED FROM PYTHON SOURCE LINES 22-23

Set the logging level to info to see extra information:

.. GENERATED FROM PYTHON SOURCE LINES 23-26

.. code-block:: default

    configure_logging(level="INFO")






.. rst-class:: sphx-glr-script-out

 Out:

 .. code-block:: none

    2022-10-10 12:09:03,161 - JUNIFER - INFO - ===== Lib Versions =====
    2022-10-10 12:09:03,161 - JUNIFER - INFO - numpy: 1.22.4
    2022-10-10 12:09:03,161 - JUNIFER - INFO - scipy: 1.9.2
    2022-10-10 12:09:03,161 - JUNIFER - INFO - pandas: 1.4.4
    2022-10-10 12:09:03,161 - JUNIFER - INFO - nilearn: 0.9.2
    2022-10-10 12:09:03,161 - JUNIFER - INFO - nibabel: 4.0.2
    2022-10-10 12:09:03,161 - JUNIFER - INFO - junifer: 0.0.1.dev560
    2022-10-10 12:09:03,161 - JUNIFER - INFO - ========================




.. GENERATED FROM PYTHON SOURCE LINES 27-28

Define the markers you want:

.. GENERATED FROM PYTHON SOURCE LINES 28-43

.. code-block:: default


    marker_dicts = [
        {
            "name": "Schaefer100x17_RSSETS",
            "kind": "RSSETSMarker",
            "atlas": "Schaefer100x17",
        },
        {
            "name": "Schaefer200x17_RSSETS",
            "kind": "RSSETSMarker",
            "atlas": "Schaefer200x17",
        },
    ]









.. GENERATED FROM PYTHON SOURCE LINES 44-46

Create a temporary directory for junifer feature extraction:
At the end you can read the extracted data into a ``pandas.DataFrame``.

.. GENERATED FROM PYTHON SOURCE LINES 46-65

.. code-block:: default

    with tempfile.TemporaryDirectory() as tmpdir:

        storage = {"kind": "SQLiteFeatureStorage", "uri": f"{tmpdir}/test.db"}
        # run the defined junifer feature extraction pipeline
        # TODO: needs SQLiteFeatureStorage.store_timeseries() to be
        # implemented first
        # run(
        #     workdir="/tmp",
        #     datagrabber={"kind": "SPMAuditoryTestingDatagrabber"},
        #     markers=marker_dicts,
        #     storage=storage,
        # )

        # read in extracted features and add confounds and targets
        # for julearn run cross validation
        # This will not run for now as store_timeseries() is not implemented yet
        # collect(storage)
        # db = SQLiteFeatureStorage(uri=storage["uri"], single_output=True)
        # df_vbm = db.read_df(feature_name="Schaefer100x17")








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.006 seconds)


.. _sphx_glr_download_auto_examples_run_ets_rss_marker.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: run_ets_rss_marker.py <run_ets_rss_marker.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: run_ets_rss_marker.ipynb <run_ets_rss_marker.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
